---
title: "Import data from ODK Central"
---

## Introduction

### Overview

Application Programming Interfaces (APIs) allow you to import data directly from servers.

### Learning objectives

* We will explore the use of APIs through the example of **ruODK** for importing data from ODK Central to R.

## Tutorial

While data digitally captured using ODK Collect or Enketo and stored in ODK Central can be retrieved in bulk through the web interface, ODK Central's API provides direct access to its data (and functionality). It is a more efficient way to ensure that data are always up-to-date.

We will see how to retrieve data through the OData API.

::: panel-tabset

### :pencil2: Exercise 1

Connect to the ODK Central server data set.

* odata service: "https://private-anon-24fcfe2426-odkcentral.apiary-mock.com/v1/projects/7/forms/simple.svc"
* Email: "my.email.address@getodk.org"
* Password: "my.super.secure.password".

::: callout-tip
-   R: use the [ru_setup](https://docs.ropensci.org/ruODK/reference/ru_setup.html) function from the `ruODK` package [@mayer20].
-   Python: use functions from the `pyODK` package.
:::

```{r}
#| echo: fenced
# Write your code here
```

### R

```{r}
#| echo: fenced
ruODK::ru_setup(
  svc = "https://private-anon-24fcfe2426-odkcentral.apiary-mock.com/v1/projects/7/forms/simple.svc",
  un = "my.email.address@getodk.org",
  pw = "my.super.secure.password",
  verbose = TRUE
)
```

:::

::: panel-tabset

### :pencil2: Exercise 2

Retrieve data from form and store the data set into a data frame called df4

::: callout-tip
-   R: use the [odata_submission_get](https://docs.ropensci.org/ruODK/reference/odata_submission_get.html) function from the `ruODK` package [@mayer20].
-   Python: use functions from the `pyODK` package.
:::

```{r}
#| echo: fenced
# Write your code here
```

### R

```{r}
#| echo: fenced
fq_form_schema <- ruODK::form_schema()
fq_form_schema
```
```{r}
#| echo: fenced
df <- ruODK::odata_service_get()
df
```

:::

## Encrypted data

Encrypted data can only be retrieved using the RESTful API and cannot be retrieved using the oData API. ODK Central supports two modes of encryption - learn about them here. ruODK supports project managed encryption, however the support is limited to exactly one encryption key. The supplied passphrase will be used against the first returned encryption key. Remaining encryption keys are ignored by ruODK.

::: callout-important
If an incorrect passphrase is given, the request is terminated immediately. It has been reported that multiple requests with incorrect passphrases can crash ODK Central.
:::
