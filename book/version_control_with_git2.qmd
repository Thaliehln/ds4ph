---
title: ":blue_book: Commit your changes with Git"
editor: visual
---

## Commit

Version control uses a *working copy* where you do your work.

::: callout-note
You can `update` your working copy to incorporate any new edits or versions that have been added to the repository since the last time you updated.
:::

You make arbitrary edits to this copy, without affecting your teammates. When you are happy with your edits, you `commit` your changes to a *repository*.

Snapshot of your entire repository at a specific time.

Over time, commits should tell a story of the history of your repository and how it came to be the way that it currently is.

Commits include lots of metadata in addition to the contents and message, like the author, timestamp, and more.

It also requires that you write something human-readable that will be a breadcrumb for you in the future. be easy to compare versions, and you can easily revert to previous versions.

## Push and Pull

![](images/paste-A340C143.png)
