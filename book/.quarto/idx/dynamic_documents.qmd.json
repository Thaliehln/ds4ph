{"title":":books: Dynamic documents","markdown":{"yaml":{"title":":books: Dynamic documents"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\n### Overview\n\nThe final product of a quantitative research is a report (e.g., scientific publications), i.e. a textual description of your research findings along with figures and tables resulting from your analysis. summary tables and figures. Based on this data, you discuss findings and give recommendations while using the data as evidence that backs up your discussion.\n\nImagine the following situations\n\n1.  you are informed that you were given the wrong data set just when you have finalised your article for submission to a journal. You are sent a new one and you are asked to run the same analysis with this new data set.\n2.  you realize that a mistake was made and need to re-examine the code, fix the error, and re-run the analysis 3. someone you are training wants to see the code and be able to reproduce the results to learn about your approach?\n\nSituations like the ones just described are actually quite common for a data scientist.\n\nIt is actually possible to keep your data science projects organized with RStudio so that re-running an analysis and recreating reports is straightforward and can be done with minimal effort.Dynamic documents can be produced to update on a routine basis (e.g. daily surveillance reports) and/or run on subsets of data (e.g. reports for each jurisdiction).\n\n### Learning objectives\n\nThe goal of this section is to briefly discuss why we want to learn quarto, the benefits, and the barriers to using it.\n\n-   What is a dynamic report?\n-   What is Quarto?\n-   Think about why you want to use Quarto\n\n## Background to R Markdown\n\nThis is possible due to the fact that Quarto documents enable code and textual descriptions to be combined into the same document, and the figures and tables produced by the code are automatically added to the document.\n\nQuarto is a tool that allows you integrate your code, text and figures in a single file in order to make high quality, reproducible reports. A paper published with an included quarto file and data sets can be reproduced by anyone with a computer. R Markdown integrates code and natural language in a way that is called \"literate programming\" [@knuth_literate_1984].\n\nTo explain some of the concepts and packages involved:\n\n::: panel-tabset\n### Markdown\n\nMarkdown is a \"language\" that allows you to write a document using plain text, that can be converted to html and other formats. It is not specific to R.\n\nMarkdown files have a `md` extension.\n\n### R Markdown\n\nIt is a variation on markdown that is specific to R - it allows you to write a document using markdown to produce text and to embed R code and display their outputs. which was a variant of Markdown specifically designed to allow R code chunks to be included.\n\nR Markdown is a widely-used tool for creating automated, reproducible, and share-worthy outputs, such as reports. It can generate static or interactive outputs, in Word, pdf, html, powerpoint, and other formats.\n\nR Markdown files have `.Rmd` extension.\n\n### rmarkdown\n\nIt is the R package: This is used by R to render the .Rmd file into the desired output.\n\n### Quarto\n\nQuarto is the successor to R Markdown. As a R Markdown document, a Quarto document intersperces code and text such that the script actually becomes your output document. You can create an entire formatted document, including narrative text (can be dynamic to change based on your data), tables, figures, bullets/numbers, bibliographies, etc.\n\nQuatro uses a mark-up language similar to HyperText Markup Language (HTML) or LaTeX, in comparison to a \"What You See Is What You Get\" (WYSIWYG) language, such as Microsoft Word. This means that all the aspects are consistent, for instance, all top-level heading will look the same. But it means that we use symbols to designate how we would like certain aspects to appear. And it is only when we build the mark-up that we get to see what it looks like. A visual editor option can also be used which hides the need for the user to do this mark-up themselves.\n\nQuarto is not tied to the R language.\n\nQuarto files have a `.Qmd` extension.\n:::\n\n::: panel-tabset\n### knitr\n\nThis R package will read the code chunks, execute it, and 'knit' it back into the document. This is how tables and graphs are included alongside the text.\n\n### Pandoc\n\nPandoc actually convert the output into word/pdf/powerpoint etc. It is a software separate from R but is installed automatically with RStudio.\n:::\n\n![](images/paste-ABFB521E.png)\n\nThe process that happens in the background involves feeding the .Rmd file to knitr, which executes the R code chunks and creates a new .md (markdown) file which includes the R code and its rendered output. The .md file is then processed by Pandoc to create the final product: a Microsoft Word document, HTML file, PowerPoint document, PDF, etc.\n\n::: panel-tabset\n### :speech_balloon: Discussion\n\nForm small groups of 2-4 with your neighbours and discuss how you expect learning Quarto might benefit you.\n\n:clock3: 5 minutes\n:::\n\n## References\n\n-   The Epidemiologist R Handbook (https://epirhandbook.com)\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","from":"markdown+emoji","output-file":"dynamic_documents.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.251","bibliography":["references.bib"],"csl":"vancouver.csl","theme":"cosmo","title":":books: Dynamic documents"},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","from":"markdown+emoji","output-file":"dynamic_documents.pdf"},"language":{},"metadata":{"block-headings":true,"bibliography":["references.bib"],"csl":"vancouver.csl","documentclass":"scrreprt","title":":books: Dynamic documents"},"extensions":{"book":{}}}}}