{"title":":blue_book: Import external data","markdown":{"yaml":{"title":":blue_book: Import external data"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\nMost of the time you will want to generate *Quarto* documents using your own data. To this aim, you will have to import data from external sources such as files, URLs, or server data (e.g., ODK Central data). There is a dedicated importing function in R and Python for almost every data format. In this section we show you how to import Stata (`.dta`), Excel (`.xlsx`) and comma-separated values (CSV, `.csv`) data formats from files and from URLs, as well as how to import ODK data directly from an ODK Central server.\n\n::: callout-important\nAs you import data to further process / analyse them, you have to store the imported data in a data frame.\n::: \n\n## Import data from files\n\nAll Python and R functions only require as input the path where the file you want to import is stored. This path has to be passed as a  sequence of characters (*character*) within double (\"\") or single ('') quotes. \n\nThe path can be either:\n\n* relative to your Quarto document\n\n```{r}\n#| echo: fenced\nrelative_path <- \"./data/mydata.csv\"\n```\n\n* absolute\n\n```{r}\n#| echo: fenced\nabsolute_path <- \"C:/Users/myuser/Documents/mydata.csv\"\n```\n\nFunctions in general have additional optional arguments.\n\n### Import Excel data\n\n::: panel-tabset\n\n#### :pencil2: Exercise 1\n\nImport the Excel data set **dataset1.xlsx** and store it into a data frame called **df1**.\n\n::: callout-tip\n-   Stata: use the [import excel](https://www.stata.com/manuals/dimportexcel.pdf) Stata command with the [stata](https://rdrr.io/github/lbraglia/RStata/man/stata.html) function from the `RStata` package.\n-   R: use the [read.xlsx](https://www.rdocumentation.org/packages/openxlsx/versions/4.2.5/topics/read.xlsx) function from the `openxlsx` package.\n-   Python: use the [read_excel](https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html) function from the `pandas` package.\n:::\n\n```{r}\n#| echo: fenced\n# Write your code here\n```\n\n#### Stata\n\nUse the [import excel](https://www.stata.com/manuals/dimportexcel.pdf) Stata command with the [stata](https://rdrr.io/github/lbraglia/RStata/man/stata.html) function from the `RStata` package.\n\n```{r}\n#| echo: fenced\nlibrary(RStata)\n\ndf1 <- RStata::stata(\"import excel ./data/dataset1.xlsx\",\n                     data.out = TRUE)\n```\n\n#### R\n\nUse the [read.xlsx](https://www.rdocumentation.org/packages/openxlsx/versions/4.2.5/topics/read.xlsx) function from the `openxlsx` package.\n\n```{r}\n#| echo: fenced\nlibrary(openxlsx)\n\ndf1 <- openxlsx::read.xlsx(\"./data/dataset1.xlsx\")\n```\n\n#### Python\n\nUse the [read_excel](https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html) function from the `pandas` package.\n\n```{python}\n#| echo: fenced\nimport pandas\n\ndf1 = pandas.read_excel('./data/dataset1.xlsx')\n```\n:::\n\n### Import CSV data\n\n::: panel-tabset\n\n#### :pencil2: Exercise 2\n\nRead the CSV data set **dataset1.csv** and store it into a data frame called **df2**.\n\n::: callout-tip\n-   Stata: use the import delimited Stata command with the [stata](https://rdrr.io/github/lbraglia/RStata/man/stata.html) function from the `RStata` package.\n-   R: use the [read.csv](https://www.rdocumentation.org/packages/utils/versions/3.6.2/topics/read.table) function from the `haven` package.\n-   Python: use the [read_csv](https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html) function from the `pandas` package.\n:::\n\n```{r}\n#| echo: fenced\n# Write your code here\n```\n\n#### Stata\n\n```{r}\n#| echo: fenced\nlibrary(RStata)\n\ndf2 <- RStata::stata(\"import delimited ./data/dataset1.csv\",\n                     data.out = TRUE)\n```\n\n#### R\n\n```{r}\n#| echo: fenced\ndf2 <- read.csv(\"./data/dataset1.csv\")\n```\n\n#### Python\n\nUse the [read_csv](https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html) function from the `pandas` package.\n\n```{python}\n#| echo: fenced\nimport pandas\n\ndf2 = pandas.read_csv('./data/dataset1.csv')\n```\n:::\n\n### Import Stata data\n\n::: panel-tabset\n#### :pencil2: Exercise 3\n\nRead the Stata data set **dataset1.dta** and store it into a data frame called **df3**.\n\n::: callout-tip\n-   Stata: use the `use` Stata command with the [stata](https://rdrr.io/github/lbraglia/RStata/man/stata.html) function from the `RStata` package.\n-   R: use the [read_dta](https://haven.tidyverse.org/reference/read_dta.html) function from the `haven` package. This package supports SAS, STATA and SPSS software.\n-   Python: use the [read_stata](https://pandas.pydata.org/docs/reference/api/pandas.read_stata.html) function from the `pandas` package.\n:::\n\n```{r}\n#| echo: fenced\n# Write your code here\n```\n\n#### Stata\n\n```{r}\n#| echo: fenced\nlibrary(RStata)\n\ndf3 <- RStata::stata(\"use ./data/dataset1.dta\",\n                     data.out = TRUE)\n```\n\n#### R\n\n```{r}\n#| echo: fenced\nlibrary(haven)\n\ndf3 <- haven::read_dta(\"./data/dataset1.dta\")\n```\n\n#### Python\n\nUse the [read_stata](https://pandas.pydata.org/docs/reference/api/pandas.read_stata.html) function from the `pandas` package.\n\n```{python}\n#| echo: fenced\nimport pandas\n\ndf3 = pandas.read_stata('./data/dataset1.dta')\n```\n:::\n\n## Import data from URLs\n\nAll functions can accept URLs as well instead of the path to a specific file.\n\n::: panel-tabset\n#### :pencil2: Exercise 4\n\nImport the CSV data set that contains a comprehensive spatial inventory of 98,745 public health facilities in Sub Saharan Africa directly from the following  [url](https://open.africa/dataset/d7335980-29d5-476c-bf7a-feb4e22cf631/resource/e2432e8a-cf15-4a8b-b8c3-567f443c1459/download/cfa-data-hospitals-in-africa-00-ssa-mfl-130219.xlsx-ssa-mfl.csv) and store it into a data frame called **df4**.\n\nTo learn more about how this data set was assembled, please refer to [@maina_spatial_2019]\n\n::: callout-tip\n-   Stata: use the import excel Stata command with the `stata` function from the `RStata` package.\n-   R: use the [read.xlsx](https://www.rdocumentation.org/packages/openxlsx/versions/4.2.5/topics/read.xlsx) function from the `openxlsx` package.\n-   Python: use the [read_excel](https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html) function from the `pandas` package. In the latest version of pandas (0.19.2) you can directly pass the url\n:::\n\n```{r}\n#| echo: fenced\n# Write your code here\n```\n\n#### Stata\n\nHere, because quotes are already used for the Stata command, you need to use the other type of quotes for indicating the URL.\n\n```{r}\n#| echo: fenced\nlibrary(RStata)\n\ndf2 <- RStata::stata('import delimited \"https://open.africa/dataset/d7335980-29d5-476c-bf7a-feb4e22cf631/resource/e2432e8a-cf15-4a8b-b8c3-567f443c1459/download/cfa-data-hospitals-in-africa-00-ssa-mfl-130219.xlsx-ssa-mfl.csv\"',\n                     data.out = TRUE)\n```\n\n#### R\n\nUse the [read.xlsx](https://www.rdocumentation.org/packages/openxlsx/versions/4.2.5/topics/read.xlsx) function from the `openxlsx` package.\n\n```{r}\n#| echo: fenced\ncsv_url <- \"https://open.africa/dataset/d7335980-29d5-476c-bf7a-feb4e22cf631/resource/e2432e8a-cf15-4a8b-b8c3-567f443c1459/download/cfa-data-hospitals-in-africa-00-ssa-mfl-130219.xlsx-ssa-mfl.csv\"\ndf4 <- read.csv(csv_url)\n```\n\n#### Python\n\nUse the [read_excel](https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html) function from the `pandas` package.\n\n```{python}\n#| echo: fenced\nimport pandas\n\ncsv_url = \"https://open.africa/dataset/d7335980-29d5-476c-bf7a-feb4e22cf631/resource/e2432e8a-cf15-4a8b-b8c3-567f443c1459/download/cfa-data-hospitals-in-africa-00-ssa-mfl-130219.xlsx-ssa-mfl.csv\"\ndf1 = pandas.read_csv(csv_url)\n```\n:::\n\n## Import data from ODK Central\n\nWhile data digitally captured using ODK Collect or Enketo and stored in ODK Central can be retrieved in bulk through the web interface, ODK Central's API provides direct access to its data (and functionality). It is a more efficient way to ensure that data are always up-to-date.\n\nWe will see how to retrieve data through the OData API.\n\n::: panel-tabset\n\n### :pencil2: Exercise 5\n\nConnect to the ODK Central server data set.\n\"https://private-anon-24fcfe2426-odkcentral.apiary-mock.com/v1/projects/7/forms/simple.svc\"\n\nYour email is \"my.email.address@getodk.org\" and your password is \"my.super.secure.password\".\n\n::: callout-tip\n-   R: use the [ru_setup](https://docs.ropensci.org/ruODK/reference/ru_setup.html) function from the `ruODK` package [@mayer20].\n-   Python: use functions from the `pyODK` package.\n:::\n\n```{r}\n#| echo: fenced\n# Write your code here\n```\n\n### R\n\n```{r}\n#| echo: fenced\nruODK::ru_setup(\n  svc = \"https://private-anon-24fcfe2426-odkcentral.apiary-mock.com/v1/projects/7/forms/simple.svc\",\n  un = \"my.email.address@getodk.org\",\n  pw = \"my.super.secure.password\",\n  verbose = TRUE\n)\n```\n\n:::\n\n::: panel-tabset\n\n### :pencil2: Exercise 6\n\nRetrieve data from form and store the data set into a data frame called df4\n\n::: callout-tip\n-   R: use the [odata_submission_get](https://docs.ropensci.org/ruODK/reference/odata_submission_get.html) function from the `ruODK` package [@mayer20].\n-   Python: use functions from the `pyODK` package.\n:::\n\n```{r}\n#| echo: fenced\n# Write your code here\n```\n\n### R\n\n```{r}\n#| echo: fenced\nfq_form_schema <- ruODK::form_schema()\nfq_form_schema\n```\n```{r}\n#| echo: fenced\ndf <- ruODK::odata_service_get()\ndf\n```\n\n:::\n\n::: callout-important\nEncrypted data can only be retrieved using the RESTful API and cannot be retrieved using the oData API. ODK Central supports two modes of encryption - learn about them here. ruODK supports project managed encryption, however the support is limited to exactly one encryption key. The supplied passphrase will be used against the first returned encryption key. Remaining encryption keys are ignored by ruODK.\n\nIf an incorrect passphrase is given, the request is terminated immediately. It has been reported that multiple requests with incorrect passphrases can crash ODK Central.\n\n```{r}\n#| echo: fenced\ndf <- ruODK::submission_export()\ndf\n```\n\n:::"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","from":"markdown+emoji","output-file":"import_data.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.251","bibliography":["references.bib"],"editor":"visual","theme":"cosmo","title":":blue_book: Import external data"},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","from":"markdown+emoji","output-file":"import_data.pdf"},"language":{},"metadata":{"block-headings":true,"bibliography":["references.bib"],"editor":"visual","documentclass":"scrreprt","title":":blue_book: Import external data"},"extensions":{"book":{}}}}}