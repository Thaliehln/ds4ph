{
  "hash": "2067add41f61d967cfd6bd2d841eb7b4",
  "result": {
    "markdown": "---\ntitle: \":blue_book: Import external data\"\n---\n\n\n## Introduction\n\nMost of the time you will want to generate *Quarto* documents using your own data. To this aim, you will have to import data from external sources such as files, URLs, or server data (e.g., ODK Central data). There is a dedicated importing function in R and Python for almost every data format. In this section we show you how to import Stata (`.dta`), Excel (`.xlsx`) and comma-separated values (CSV, `.csv`) data formats from files and from URLs, as well as how to import ODK data directly from an ODK Central server.\n\n::: callout-important\nAs you import data to further process / analyse them, you have to store the imported data in a data frame.\n::: \n\n## Import data from files {#sec-import-data-from-files}\n\nAll Python and R functions only require as input the path where the file you want to import is stored. This path has to be passed as a  sequence of characters (*character*) within double (\"\") or single ('') quotes. \n\nThe path can be either:\n\n* relative to your Quarto document\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nrelative_path <- \"./data/mydata.csv\"\n```\n````\n:::\n\n\n* absolute\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nabsolute_path <- \"C:/Users/myuser/Documents/mydata.csv\"\n```\n````\n:::\n\n\nFunctions in general have additional optional arguments.\n\n### Import Excel data\n\n::: panel-tabset\n\n#### :pencil2: Exercise 1\n\nImport the Excel data set **dataset1.xlsx** and store it into a data frame called **df1**.\n\n::: callout-tip\n-   Stata: use the [import excel](https://www.stata.com/manuals/dimportexcel.pdf) Stata command with the [stata](https://rdrr.io/github/lbraglia/RStata/man/stata.html) function from the `RStata` package.\n-   R: use the [read.xlsx](https://www.rdocumentation.org/packages/openxlsx/versions/4.2.5/topics/read.xlsx) function from the `openxlsx` package.\n-   Python: use the [read_excel](https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html) function from the `pandas` package.\n:::\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Write your code here\n```\n````\n:::\n\n\n#### Stata\n\nUse the [import excel](https://www.stata.com/manuals/dimportexcel.pdf) Stata command with the [stata](https://rdrr.io/github/lbraglia/RStata/man/stata.html) function from the `RStata` package.\n\n\n::: {.cell df-print='kable'}\n\n````{.cell-code}\n```{{r}}\n#| df-print: kable\nlibrary(RStata)\n\ndf1_stata <- RStata::stata(\"import excel ./data/dataset1a.xlsx\",\n                     data.out = TRUE)\n```\n````\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in readLines(rdl): Zeile 1 scheint ein nul Zeichen zu enthalten\n```\n:::\n\n````{.cell-code}\n```{{r}}\n#| df-print: kable\ndf1_stata_sub <- head(df1_stata, 5)\nknitr::kable(df1_stata_sub)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n. import excel ./data/dataset1a.xlsx\n(7 vars, 10,309 obs)\n```\n:::\n\n::: {.cell-output-display}\n|A        |B       |C                 |D          |E                |F          |G              |\n|:--------|:-------|:-----------------|:----------|:----------------|:----------|:--------------|\n|child_ID |SDC_sex |SDC_age_in_months |CLIN_fever |CLIN_fever_onset |CLIN_cough |CLIN_diarrhoea |\n|1        |2       |10                |0          |                 |1          |1              |\n|2        |2       |6                 |0          |                 |0          |1              |\n|3        |1       |6                 |0          |                 |0          |0              |\n|4        |1       |11                |1          |3                |1          |1              |\n:::\n:::\n\n\n#### R\n\nUse the [read.xlsx](https://www.rdocumentation.org/packages/openxlsx/versions/4.2.5/topics/read.xlsx) function from the `openxlsx` package.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(openxlsx)\n\ndf1_r <- openxlsx::read.xlsx(\"./data/dataset1a.xlsx\")\ndf1_r_sub <- head(df1_r, 5)\nknitr::kable(df1_r_sub)\n```\n````\n\n::: {.cell-output-display}\n| child_ID| SDC_sex| SDC_age_in_months| CLIN_fever| CLIN_fever_onset| CLIN_cough| CLIN_diarrhoea|\n|--------:|-------:|-----------------:|----------:|----------------:|----------:|--------------:|\n|        1|       2|                10|          0|               NA|          1|              1|\n|        2|       2|                 6|          0|               NA|          0|              1|\n|        3|       1|                 6|          0|               NA|          0|              0|\n|        4|       1|                11|          1|                3|          1|              1|\n|        5|       2|                21|          1|                2|          0|              0|\n:::\n:::\n\n\n#### Python\n\nUse the [read_excel](https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html) function from the `pandas` package.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{python}}\nimport pandas\n\ndf1_python = pandas.read_excel('./data/dataset1a.xlsx')\ndf1_python_sub = df1_python.head(5)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\nC:\\Users\\langhe\\AppData\\Local\\R\\win-library\\4.3\\reticulate\\python\\rpytools\\loader.py:117: UserWarning: Pandas requires version '1.3.6' or newer of 'bottleneck' (version '1.3.5' currently installed).\n  return _find_and_load(name, import_)\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Paket 'reticulate' wurde unter R Version 4.3.3 erstellt\n```\n:::\n\n```{.r .cell-code}\nknitr::kable(py$df1_python_sub)\n```\n\n::: {.cell-output-display}\n| child_ID| SDC_sex| SDC_age_in_months| CLIN_fever| CLIN_fever_onset| CLIN_cough| CLIN_diarrhoea|\n|--------:|-------:|-----------------:|----------:|----------------:|----------:|--------------:|\n|        1|       2|                10|          0|              NaN|          1|              1|\n|        2|       2|                 6|          0|              NaN|          0|              1|\n|        3|       1|                 6|          0|              NaN|          0|              0|\n|        4|       1|                11|          1|                3|          1|              1|\n|        5|       2|                21|          1|                2|          0|              0|\n:::\n:::\n\n\n:::\n\n### Import CSV data\n\n::: panel-tabset\n\n#### :pencil2: Exercise 2\n\nRead the CSV data set **dataset1.csv** and store it into a data frame called **df2**.\n\n::: callout-tip\n-   Stata: use the import delimited Stata command with the [stata](https://rdrr.io/github/lbraglia/RStata/man/stata.html) function from the `RStata` package.\n-   R: use the [read.csv](https://www.rdocumentation.org/packages/utils/versions/3.6.2/topics/read.table) function from the `haven` package.\n-   Python: use the [read_csv](https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html) function from the `pandas` package.\n:::\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Write your code here\n```\n````\n:::\n\n\n#### Stata\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(RStata)\n\ndf2 <- RStata::stata(\"import delimited ./data/dataset1b.csv\",\n                     data.out = TRUE)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n. import delimited ./data/dataset1b.csv\n(encoding automatically selected: ISO-8859-1)\n(7 vars, 10,308 obs)\n```\n:::\n:::\n\n\n#### R\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\ndf2_r <- read.csv(\"./data/dataset1b.csv\")\ndf2_r_sub <- head(df2_r, 5)\nknitr::kable(df2_r_sub)\n```\n````\n\n::: {.cell-output-display}\n| child_ID| SDC_sex| SDC_age_in_months| CLIN_fever| CLIN_fever_onset| CLIN_cough| CLIN_diarrhoea|\n|--------:|-------:|-----------------:|----------:|----------------:|----------:|--------------:|\n|        1|       2|                10|          0|               NA|          1|              1|\n|        2|       2|                 6|          0|               NA|          0|              1|\n|        3|       1|                 6|          0|               NA|          0|              0|\n|        4|       1|                11|          1|                3|          1|              1|\n|        5|       2|                21|          1|                2|          0|              0|\n:::\n:::\n\n\n#### Python\n\nUse the [read_csv](https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html) function from the `pandas` package.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{python}}\nimport pandas\n\ndf2 = pandas.read_csv('./data/dataset1b.csv')\n```\n````\n:::\n\n:::\n\n### Import Stata data\n\n::: panel-tabset\n#### :pencil2: Exercise 3\n\nRead the Stata data set **dataset1.dta** and store it into a data frame called **df3**.\n\n::: callout-tip\n-   Stata: use the `use` Stata command with the [stata](https://rdrr.io/github/lbraglia/RStata/man/stata.html) function from the `RStata` package.\n-   R: use the [read_dta](https://haven.tidyverse.org/reference/read_dta.html) function from the `haven` package. This package supports SAS, STATA and SPSS software.\n-   Python: use the [read_stata](https://pandas.pydata.org/docs/reference/api/pandas.read_stata.html) function from the `pandas` package.\n:::\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Write your code here\n```\n````\n:::\n\n\n#### Stata\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(RStata)\n\ndf3 <- RStata::stata(\"use ./data/dataset1c.dta\",\n                     data.out = TRUE)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n. use ./data/dataset1c.dta\n```\n:::\n:::\n\n\n#### R\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(haven)\n\ndf3 <- haven::read_dta(\"./data/dataset1c.dta\")\n```\n````\n:::\n\n\n#### Python\n\nUse the [read_stata](https://pandas.pydata.org/docs/reference/api/pandas.read_stata.html) function from the `pandas` package.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{python}}\nimport pandas\n\ndf3 = pandas.read_stata('./data/dataset1c.dta')\n```\n````\n:::\n\n:::\n\n## Import data from URLs\n\nAll functions can accept URLs as well instead of the path to a specific file.\n\n::: panel-tabset\n#### :pencil2: Exercise 4\n\nImport the CSV data set that contains a comprehensive spatial inventory of 98,745 public health facilities in Sub Saharan Africa directly from the following  [url](https://open.africa/dataset/d7335980-29d5-476c-bf7a-feb4e22cf631/resource/e2432e8a-cf15-4a8b-b8c3-567f443c1459/download/cfa-data-hospitals-in-africa-00-ssa-mfl-130219.xlsx-ssa-mfl.csv) and store it into a data frame called **df4**.\n\nTo learn more about how this data set was assembled, please refer to [@maina_spatial_2019]\n\n::: callout-tip\n-   Stata: use the import excel Stata command with the `stata` function from the `RStata` package.\n-   R: use the [read.xlsx](https://www.rdocumentation.org/packages/openxlsx/versions/4.2.5/topics/read.xlsx) function from the `openxlsx` package.\n-   Python: use the [read_excel](https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html) function from the `pandas` package. In the latest version of pandas (0.19.2) you can directly pass the url\n:::\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Write your code here\n```\n````\n:::\n\n\n#### Stata\n\nHere, because quotes are already used for the Stata command, you need to use the other type of quotes for indicating the URL.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(RStata)\n\n#df2 <- RStata::stata('import delimited \"https://open.africa/dataset/d7335980-29d5-476c-bf7a-feb4e22cf631/resource/e2432e8a-cf15-4a8b-b8c3-567f443c1459/download/cfa-data-hospitals-in-africa-00-ssa-mfl-130219.xlsx-ssa-mfl.csv\"',\n                     # data.out = TRUE)\n```\n````\n:::\n\n\n#### R\n\nUse the [read.xlsx](https://www.rdocumentation.org/packages/openxlsx/versions/4.2.5/topics/read.xlsx) function from the `openxlsx` package.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#csv_url <- \"https://open.africa/dataset/d7335980-29d5-476c-bf7a-feb4e22cf631/resource/e2432e8a-cf15-4a8b-b8c3-567f443c1459/download/cfa-data-hospitals-in-africa-00-ssa-mfl-130219.xlsx-ssa-mfl.csv\"\n#df4 <- read.csv(csv_url)\n```\n````\n:::\n\n\n#### Python\n\nUse the [read_excel](https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html) function from the `pandas` package.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{python}}\nimport pandas\n\n#csv_url = \"https://open.africa/dataset/d7335980-29d5-476c-bf7a-feb4e22cf631/resource/e2432e8a-cf15-4a8b-b8c3-567f443c1459/download/cfa-data-hospitals-in-africa-00-ssa-mfl-130219.xlsx-ssa-mfl.csv\"\n#df1 = pandas.read_csv(csv_url)\n```\n````\n:::\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}