{
  "hash": "2a3c03bb5f0ed72a5f4e12e6c42107bd",
  "result": {
    "markdown": "---\ntitle: \"Import data from ODK Central\"\nfrom: markdown+emoji\n---\n\n\n## Introduction\n\n### Overview\n\nApplication Programming Interfaces (APIs) allow you to import data directly from servers.\n\n### Learning objectives\n\n* We will explore the use of APIs through the example of **ruODK** for importing data from ODK Central to R.\n\n## Tutorial\n\nWhile data digitally captured using ODK Collect or Enketo and stored in ODK Central can be retrieved in bulk through the web interface, ODK Central's API provides direct access to its data (and functionality). It is a more efficient way to ensure that data are always up-to-date.\n\nWe will see how to retrieve data through the OData API.\n\n::: panel-tabset\n\n### :pencil2: Exercise 1\n\nConnect to the ODK Central server data set.\n\n* odata service: \"https://private-anon-24fcfe2426-odkcentral.apiary-mock.com/v1/projects/7/forms/simple.svc\"\n* Email: \"my.email.address@getodk.org\"\n* Password: \"my.super.secure.password\".\n\n::: callout-tip\n-   R: use the [ru_setup](https://docs.ropensci.org/ruODK/reference/ru_setup.html) function from the `ruODK` package [@mayer20].\n-   Python: use functions from the `pyODK` package. Use `pip` in your standard Python shell (outside of RStudio) to install the `pyODK` package in a Python environment above 3.8.\n\n:::\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Write your code here\n```\n````\n:::\n\n\n### R\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# ruODK::ru_setup(\n#   svc = \"https://private-anon-24fcfe2426-odkcentral.apiary-mock.com/v1/projects/7/forms/simple.svc\",\n#   un = \"my.email.address@getodk.org\",\n#   pw = \"my.super.secure.password\",\n#   verbose = TRUE\n# )\n```\n````\n:::\n\n\n### Python\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Paket 'reticulate' wurde unter R Version 4.3.3 erstellt\n```\n:::\n\n```{.r .cell-code}\n#reticulate::use_condaenv(\"pyodk_test\", required = TRUE)\n#reticulate::py_discover_config()\n```\n:::\n\n\nhttps://docs.google.com/presentation/d/1oJdAdmeCIsGTp9083vAS-c5S5rnaO7e3pxzfFYe9-UI/edit#slide=id.g16c4e809b19_0_178\n\n\n::: {.cell}\n\n```{.python .cell-code}\n#from pyodk.client import Client\n#client = Client()\n#client.open()\n```\n:::\n\n\n:::\n\n::: panel-tabset\n\n### :pencil2: Exercise 2\n\nRetrieve data from form and store the data set into a data frame called df4\n\n::: callout-tip\n-   R: use the [odata_submission_get](https://docs.ropensci.org/ruODK/reference/odata_submission_get.html) function from the `ruODK` package [@mayer20].\n-   Python: use functions from the `pyODK` package.\n:::\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Write your code here\n```\n````\n:::\n\n\n### R\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#fq_form_schema <- ruODK::form_schema()\n#fq_form_schema\n```\n````\n:::\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#df <- ruODK::odata_service_get()\n#df\n```\n````\n:::\n\n\n:::\n\n## Encrypted data\n\nEncrypted data can only be retrieved using the RESTful API and cannot be retrieved using the oData API. ODK Central supports two modes of encryption - learn about them here. ruODK supports project managed encryption, however the support is limited to exactly one encryption key. The supplied passphrase will be used against the first returned encryption key. Remaining encryption keys are ignored by ruODK.\n\n::: callout-important\nIf an incorrect passphrase is given, the request is terminated immediately. It has been reported that multiple requests with incorrect passphrases can crash ODK Central.\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}