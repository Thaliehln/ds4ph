{
  "hash": "1d8a211c2924a6891b716a299fa7faef",
  "result": {
    "markdown": "---\ntitle: \"Import data from ODK Central\"\n---\n\n\n## Introduction\n\n### Overview\n\nApplication Programming Interfaces (APIs) allow you to import data directly from servers.\n\n### Learning objectives\n\n* We will explore the use of APIs through the example of **ruODK** for importing data from ODK Central to R.\n\n## Tutorial\n\nWhile data digitally captured using ODK Collect or Enketo and stored in ODK Central can be retrieved in bulk through the web interface, ODK Central's API provides direct access to its data (and functionality). It is a more efficient way to ensure that data are always up-to-date.\n\nWe will see how to retrieve data through the OData API.\n\n::: panel-tabset\n\n### :pencil2: Exercise 1\n\nConnect to the ODK Central server data set.\n\n* odata service: \"https://private-anon-24fcfe2426-odkcentral.apiary-mock.com/v1/projects/7/forms/simple.svc\"\n* Email: \"my.email.address@getodk.org\"\n* Password: \"my.super.secure.password\".\n\n::: callout-tip\n-   R: use the [ru_setup](https://docs.ropensci.org/ruODK/reference/ru_setup.html) function from the `ruODK` package [@mayer20].\n-   Python: use functions from the `pyODK` package. Use `pip` in your standard Python shell (outside of RStudio) to install the `pyODK` package in a Python environment above 3.8.\n\n:::\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Write your code here\n```\n````\n:::\n\n\n### R\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nruODK::ru_setup(\n  svc = \"https://private-anon-24fcfe2426-odkcentral.apiary-mock.com/v1/projects/7/forms/simple.svc\",\n  un = \"my.email.address@getodk.org\",\n  pw = \"my.super.secure.password\",\n  verbose = TRUE\n)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n<ruODK settings>\n  Default ODK Central Project ID: 7 \n  Default ODK Central Form ID: simple \n  Default ODK Central URL: https://private-anon-24fcfe2426-odkcentral.apiary-mock.com \n  Default ODK Central Username: my.email.address@getodk.org \n  Default ODK Central Password: run ruODK::get_default_pw() to show \n  Default ODK Central Passphrase: run ruODK::get_default_pp() to show \n  Default Time Zone: UTC \n  Default ODK Central Version: 1.1 \n  Default HTTP GET retries: 3 \n  Verbose messages: TRUE \n  Test ODK Central Project ID:  \n  Test ODK Central Form ID:  \n  Test ODK Central Form ID (ZIP tests):  \n  Test ODK Central Form ID (Attachment tests):  \n  Test ODK Central Form ID (Parsing tests):  \n  Test ODK Central Form ID (WKT tests):  \n  Test ODK Central URL:  \n  Test ODK Central Username:  \n  Test ODK Central Password: run ruODK::get_test_pw() to show \n  Test ODK Central Passphrase: run ruODK::get_test_pp() to show \n  Test ODK Central Version: 1.1 \n```\n:::\n:::\n\n\n### Python\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Paket 'reticulate' wurde unter R Version 4.1.3 erstellt\n```\n:::\n\n```{.r .cell-code}\nreticulate::use_condaenv(\"pyodk_test\", required = TRUE)\nreticulate::py_discover_config()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npython:         C:/ProgramData/Anaconda3/envs/pyodk_test/python.exe\nlibpython:      C:/ProgramData/Anaconda3/envs/pyodk_test/python38.dll\npythonhome:     C:/ProgramData/Anaconda3/envs/pyodk_test\nversion:        3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]\nArchitecture:   64bit\nnumpy:          C:/ProgramData/Anaconda3/envs/pyodk_test/Lib/site-packages/numpy\nnumpy_version:  1.23.3\n\nNOTE: Python version was forced by use_python function\n```\n:::\n:::\n\n\nhttps://docs.google.com/presentation/d/1oJdAdmeCIsGTp9083vAS-c5S5rnaO7e3pxzfFYe9-UI/edit#slide=id.g16c4e809b19_0_178\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom pyodk.client import Client\nclient = Client()\nclient.open()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<pyodk.client.Client object at 0x000000004E1E0610>\n```\n:::\n:::\n\n\n:::\n\n::: panel-tabset\n\n### :pencil2: Exercise 2\n\nRetrieve data from form and store the data set into a data frame called df4\n\n::: callout-tip\n-   R: use the [odata_submission_get](https://docs.ropensci.org/ruODK/reference/odata_submission_get.html) function from the `ruODK` package [@mayer20].\n-   Python: use functions from the `pyODK` package.\n:::\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Write your code here\n```\n````\n:::\n\n\n### R\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nfq_form_schema <- ruODK::form_schema()\n```\n````\n\n::: {.cell-output .cell-output-stderr}\n```\ni Form schema v1.1\n```\n:::\n\n````{.cell-code}\n```{{r}}\nfq_form_schema\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 x 5\n  name       path             type      binary ruodk_name      \n  <chr>      <chr>            <chr>     <lgl>  <chr>           \n1 meta       /meta            structure NA     meta            \n2 instanceID /meta/instanceID string    NA     meta_instance_id\n3 name       /name            string    NA     name            \n4 age        /age             int       NA     age             \n5 photo      /photo           binary    TRUE   photo           \n```\n:::\n:::\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\ndf <- ruODK::odata_service_get()\ndf\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 x 3\n# ... with 3 variables: name <chr>, kind <chr>, url <chr>\n```\n:::\n:::\n\n\n:::\n\n## Encrypted data\n\nEncrypted data can only be retrieved using the RESTful API and cannot be retrieved using the oData API. ODK Central supports two modes of encryption - learn about them here. ruODK supports project managed encryption, however the support is limited to exactly one encryption key. The supplied passphrase will be used against the first returned encryption key. Remaining encryption keys are ignored by ruODK.\n\n::: callout-important\nIf an incorrect passphrase is given, the request is terminated immediately. It has been reported that multiple requests with incorrect passphrases can crash ODK Central.\n:::\n",
    "supporting": [
      "import_data_from_odk_central_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}