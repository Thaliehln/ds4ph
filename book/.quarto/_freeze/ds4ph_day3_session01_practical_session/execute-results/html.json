{
  "hash": "2a031d151f0c4cd307dc0d0250e7fba8",
  "result": {
    "markdown": "---\ntitle: \"Data Science for Public Health - Day 03 - Session 01\"\ndate: \"2022-09-27\"\nformat:\n  html:\n    toc: true\n    number-sections: true\neditor: visual\nexecute:\n  echo: false\n  warning: false\n---\n\n\n# Introduction\n\nWe are interested in predicting **referral in children under 5** based on two of the clinical measurements at the consultation:\n\n-   **culmen length** and\n-   **culmen depth**.\n\n# Load the data\n\nThe dataset is stored in **dataset1.dta**.\n\nRead the dataset and store it into a dataframe called **df**.\n\n::: callout-tip\n-   Stata hint: use the `use` command\n-   R hint: use the `read_dta` function from the `haven` package.\n-   Python hint: use `read_stata` function from `pandas`\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n# Visual inspection of the data\n\nWe want to do some data exploration to get an initial understanding of the data. Before building a predictive model, it is a good idea to look at the data:\n\n-   maybe the task you are trying to achieve can be solved without machine learning;\n-   you need to check that the information you need for your task is actually present in the dataset;\n-   inspecting the data is a good way to find peculiarities. These can arise during data collection (for example, malfunctioning sensor or missing values), or from the way the data is processed afterwards (for example capped values).\n\n## Observations/Samples\n\nDisplay the variables/features **child_id**, **test** and **test** for the **10 first observations/samples** in the data.\n\n::: callout-tip\n-   Stata hint: use the the combination of `describe` and `list` command to inspect the data\n-   R hint: you need to load the `dplyr` library to use piping\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n| child_ID|\n|--------:|\n|        1|\n|        2|\n|        3|\n|        4|\n|        5|\n|        6|\n|        7|\n|        8|\n|        9|\n|       10|\n:::\n:::\n\n\n## Variables/Features\n\nHow many variables/features are numerical in the dataset?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here\n```\n:::\n\n\nHow many variables/features are categorical in the dataset?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here\n```\n:::\n\n\n## Target classes\n\nWhat are the different penguins species available in the dataset and how many observations/samples of each species are there?\n\n-   Stata hint:\n-   R hint:\n-   Python hint: select the right column and use the `value_counts` method.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here\n```\n:::\n\n\n## Variable/feature distribution\n\nLet's look at the distribution of individual features, to get some insights about the data. We can start by plotting histograms, note that this only works for features containing numerical values.\n\nPlot histograms for the numerical variables/features\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here\n```\n:::\n\n\nShow variable/feature distribution for each class.\n\n-   Stata hint:\n-   R hint:\n-   Python hint: use `seaborn.pairplot`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here\n```\n:::\n\n\nLooking at these distributions, how difficult do you think it will be to classify the sick children using the `culmen depth` and `culmen length` variables/features?\n\n# References\n\n-   scikit-learn MOOC\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}