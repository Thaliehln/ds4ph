{
  "hash": "3b39a8f8ed1525f8dc793276c6e81178",
  "result": {
    "markdown": "---\ntitle: \":blue_book: Getting started with Quarto\"\n---\n\n\n\n## Introduction\n\n### Overview\n\nPlease review the following sections for instructions on installation steps:\n\n-   Downloading Quarto (@sec-Quarto-installation)\n-   Installing the rmarkdown package\n\n### Learning objectives\n\n1. Learn how to use Quarto\n\n## Create a new Quarto document\n\nWhile it makes sense to use Quarto going forward, there are still a lot of resources written for and in R Markdown. For this reason we provide the R Markdown equivalents for this section in Appendix.\n\nIn RStudio, you can create a new Quarto document by selecting **File** \\> **New File** \\> **Quarto Document...**\n\n![](images/paste-A7DE8B60.png)\n\nWhen you create a new Quarto document, RStudio tries to be helpful by allowing you to select a template which explains the different section of an R Markdown script. R Studio will enable you select options to pick from to generate a template Quarto document to start from.\n\nThe title and the author names are not important. If the output document type you want is not one of these, do not worry - you can just pick any one and change it later.\n\nLet us select *HTML* to create an html document.\n\nClick on create to open up a new Quarto (.Qmd) document.\n\n![](images/paste-67B97E04.png)\n\n## Visual Editor\n\nThe RStudio Visual Editor is quite new and has features that improve your writing experience. Working in the Visual Editor feels a bit like working in a Google Doc.\n\nHere's an example showing the same file in the original Source Editor with content in markdown format and in the Visual Editor with content that looks more like it will appear in a live site. You can switch freely between these modes.\n\n## Quarto document structure\n\nAn R Markdown document can be edited in RStudio.\n\nThere are three basic components to a Quarto document, similar to the components of a R Markdown document:\n\n-   metadata (YAML header)\n-   text (markdown formatting)\n-   code (R code formatting)\n\n![](images/paste-30C30ECC.png)\n\n::: panel-tabset\n### YAML header\n\nThe very top of the document consists of a (YAML) header surrounded by --- lines. Here you may want to edit the title of your document. The other settings in the header define the default document type produced (Microsoft Word) when the RMarkdown is \"knit\". the information intended to produce an html output.\n\n### Text\n\nIn WHITE background areas, any text will appear as regular text in the final report. Can have formatting such as headings, italics, bold, numbers, and bullets. See the second page of this RMarkdown cheatsheet for more detail. Can display parameters derived from your data via in-line code (such as epi week of the outbreak peak, as in the example above).\n\n### Code chunks\n\nIn gray background \"code chunks\", RMarkdown is running R commands. These commands perform data processing and cleaning steps, or could produce visual outputs in the document.\n:::\n\n## Quarto render\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code.\n\n![](images/paste-A8386DC4.png) \\## Code options\n\nYou can embed code like this:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\n\nYou can add options to executable code like this\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\n\nThe `echo: false` option disables the printing of code (only output is displayed).\n\n## References\n\n-   The Epidemiologist R Handbook (https://epirhandbook.com)\n",
    "supporting": [
      "create_first_quarto_doc_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}