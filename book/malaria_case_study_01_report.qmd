---
title: ":orange_book: Malaria case study - Report #1"
execute:
  echo: false
  warning: false
from: markdown+emoji
toc: true
number-sections: true
visual: true
---

## Introduction

```{r}
library(openxlsx)
library(dplyr)
library(skimr)
library(gtsummary)
library(finalfit)
library(ggplot2)
library(ggthemes)
library(networkD3) # For alluvial/Sankey diagrams
library(tidyverse)
```

### Instructions

The data set used for this report is stored in **dataset2.dta** or **dataset2.xlsx** or **dataset2.csv**.

1. Derive new variables to data frame `df`
2. Describe and critically discuss the distribution of consultations by facilities depending on their characteristics (urban vs. rural, health centre vs. dispensary, district)
3. Describe and critically discuss the demographics, clinical presentation and clinical history of patients.
4. Describe and critically discuss the clinical assessments (fever assessment, malaria test) conducted during the consultation.

```{r}
#| df-print: kable

# 1. Import the dataset and store it into a dataframe called **df**. 
df <- openxlsx::read.xlsx("./data/dataset2.xlsx")

df %>%
  # 2. Select columns **child_ID**, **CTX_month**, **CTX_district**, **SDC_age_in_months** for the first **5** rows in data frame `df`.
  head(5) %>%
  dplyr::select(child_ID,
                CTX_month,
                CTX_district,
                SDC_age_in_months) %>%
  # 3. Display in a table
  knitr::kable(align = c('l', 'c', 'c', 'c'),
               caption = "Extract of the database")
```

### Codebook

#### Numerical variables

+-----------------------------+
| Variable                    |
+=============================+
| SDC_age_in_months           |
+-----------------------------+
| CLIN_fever_onset            |
+-----------------------------+
| MEAS_temperature            |
+-----------------------------+

#### Categorical variables

+-----------------------------+------------------------+
| Variable                    | Coding                 |
+=============================+========================+
| SDC_sex                     | 1: male                |
|                             |                        |
|                             | 2: female              |
|                             |                        |
|                             | 98: unknown            |
+-----------------------------+------------------------+
| CLIN_fever                  | 0: no                  |
|                             |                        |
|                             | 1: yes                 |
|                             |                        |
|                             | 98: not sure           |
+-----------------------------+------------------------+
| CLIN_cough                  | 0: no                  |
|                             |                        |
|                             | 1: yes                 |
|                             |                        |
|                             | 98: not sure           |
+-----------------------------+------------------------+
| CLIN_diarrhoea              | 0: no                  |
|                             |                        |
|                             | 1: yes                 |
|                             |                        |
|                             | 98: not sure           |
+-----------------------------+------------------------+
| RX_preconsult_antibiotics   | 0: no                  |
|                             |                        |
|                             | 1: yes                 |
+-----------------------------+------------------------+
| RX_preconsult_antimalarials | 0: no                  |
|                             |                        |
|                             | 1: yes                 |
+-----------------------------+------------------------+
| CTX_district                | Kaliua                 |
|                             |                        |
|                             | Sengerema              |
|                             |                        |
|                             | Tanga                  |
+-----------------------------+------------------------+
| CTX_area                    | urban                  |
|                             |                        |
|                             | rural                  |
+-----------------------------+------------------------+
| CTX_facility_type           | dispensary             |
|                             |                        |
|                             | health centre          |
+-----------------------------+------------------------+
| TEST_malaria_result         | 0: negative\           |
|                             | 1: positive\           |
|                             | 2: indeterminate\      |
|                             | 95: unreadable result\ |
|                             | 98: not sure           |
+-----------------------------+------------------------+
| DX_malaria                  | 0: no\                 |
|                             | 1: yes                 |
+-----------------------------+------------------------+
| DX_malaria_severe           | 0: no\                 |
|                             | 1: yes                 |
+-----------------------------+------------------------+
| RX_antimalarials            | 0: no\                 |
|                             | 1: yes                 |
+-----------------------------+------------------------+
| RX_artemether               | 0: no\                 |
|                             | 1: yes                 |
+-----------------------------+------------------------+
| RX_antibiotics              | 0: no\                 |
|                             | 1: yes                 |
+-----------------------------+------------------------+
| MGMT_referral_src_caregiver |                        |
+-----------------------------+------------------------+
| MGMT_referral_src_registry  |                        |
+-----------------------------+------------------------+

### Derive new variables

Add the following two new variables to data frame `df`

+---------------------------+---------------+
| Variable                  | Coding        |
+===========================+===============+
| SDC_age_category          | \<2 months    |
|                           |               |
|                           | 2-11 months   |
|                           |               |
|                           | 12-23 months  |
|                           |               |
|                           | 24-35 months  |
|                           |               |
|                           | 36-47 months  |
|                           |               |
|                           | 48-59 months  |
+---------------------------+---------------+
| CLIN_fever_onset_category | \<2 days      |
|                           |               |
|                           | 2-3 days      |
|                           |               |
|                           | 4-6 days      |
|                           |               |
|                           | â‰¥ 7 days      |
+---------------------------+---------------+

```{r}
df <- df %>%
  dplyr::mutate(
    SDC_age_category = dplyr::case_when(
      SDC_age_in_months < 2 ~ "<2 months",
      SDC_age_in_months >= 2 & SDC_age_in_months < 12 ~ "02-11 months",
      SDC_age_in_months >= 12 & SDC_age_in_months < 24 ~ "12-23 months",
      SDC_age_in_months >= 24 & SDC_age_in_months < 36 ~ "24-35 months",
      SDC_age_in_months >= 36 & SDC_age_in_months < 48 ~ "36-47 months",
      SDC_age_in_months >= 48 & SDC_age_in_months < 60 ~ "48-59 months",
      TRUE ~ ""
    )
  ) %>% 
  dplyr::mutate(
    CLIN_fever_onset_category = dplyr::case_when(
      CLIN_fever_onset < 2 ~ "< 2 days",
      CLIN_fever_onset >= 2 & CLIN_fever_onset < 4 ~ "2-3 days",
      CLIN_fever_onset >= 4 & CLIN_fever_onset < 7 ~ "4-6 days",
      CLIN_fever_onset >= 7 ~ ">= 7 days",
      TRUE ~ ""
    )
  )
```

```{r}
df <- df %>%
  tibble::remove_rownames() %>%
  tibble::column_to_rownames(var="child_ID") %>% 
  dplyr::mutate(across(c(SDC_sex, 
                         CLIN_fever,
                         CLIN_cough,
                         CLIN_diarrhoea,
                         RX_preconsult_antibiotics,
                         RX_preconsult_antimalarials,
                         CTX_district,
                         CTX_area,
                         CTX_facility_type,
                         SDC_age_category,
                         CLIN_fever_onset_category),
                       factor))
```

### Structure of the data

```{r}
df %>%
  skim(SDC_age_in_months,
       SDC_sex,
       CLIN_fever,
       CLIN_fever_onset,
       CLIN_diarrhoea,
       CLIN_cough,
       RX_preconsult_antibiotics,
       RX_preconsult_antimalarials,
       CTX_district,
       CTX_area,
       CTX_facility_type)
```

```{r}
df <- df %>%
  dplyr::mutate(across(c(TEST_malaria_done,
                         TEST_malaria_type,
                         TEST_malaria_result,
                         DX_severe,
                         DX_malaria,
                         DX_malaria_severe,
                         RX_antimalarials,
                         RX_antimalarial_parenteral,
                         RX_artemether,
                         RX_antibiotics,
                         MGMT_referral_src_caregiver,
                         MGMT_referral_src_registry),
                       factor))
```

```{r}
df <- df %>%
  dplyr::mutate(CALC_temperature_measured = 1 * (!is.na(MEAS_temperature))) %>%
  dplyr::mutate(CALC_fever_measured = 1 * (MEAS_temperature >= 37.5)) %>%
  dplyr::mutate(CALC_fever_all = 1 * ((CLIN_fever == 1) | (!is.na(CALC_fever_measured) & (CALC_fever_measured == 1)))) %>% 
  dplyr::mutate(across(c(CALC_temperature_measured,
                         CALC_fever_measured,
                         CALC_fever_all),
                       factor))
```

```{r}
df %>%
  skimr::skim(MEAS_temperature,
              TEST_malaria_done,
              TEST_malaria_type,
              TEST_malaria_result,
              DX_severe,
              DX_malaria,
              DX_malaria_severe,
              RX_antimalarials,
              RX_antimalarial_parenteral,
              RX_artemether,
              RX_antibiotics,
              MGMT_referral_src_caregiver,
              MGMT_referral_src_registry)
```
## Facility characteristics

Describe and critically discuss the distribution of consultations by facilities depending on their characteristics (urban vs. rural, health centre vs. dispensary, district) 

```{r}
df %>%
  dplyr::select(CTX_facility_type,
                CTX_area,
                CTX_district) %>%
  gtsummary::tbl_summary(missing_text = "(Missing)")
```

### Urban / rural consultations

Describe the distribution of consultations in urban vs. rural facilities

```{r}
prop.table(table(Area = df$CTX_area)) %>% 
  knitr::kable()
```

```{r}
N <- nrow(df)
df %>%
  dplyr::group_by(CTX_area) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = 1, y = n, fill = CTX_area)) +
  geom_bar(stat="identity") +
  ylab("Number of consultations") +
  geom_text(aes(label=paste0(sprintf("%1.1f", 100 * n / N),"%")),
            position=position_stack(vjust=0.5)) +
  ggtitle("Distribution of consultations between rural and urban areas") +
  xlim(-1, 3) +
  theme_hc() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())
```

```{r}
df %>%
  dplyr::group_by(CTX_area,
                  CTX_facility_ID) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = CTX_area,
                      y = n)) + 
  ggplot2::geom_bar(position = position_dodge2(preserve = "single"),
                    stat="identity") +
  ggplot2::labs(x = "", y = "No. consultations") +
  ggthemes::theme_hc()
```
```{r}
df %>% 
  dplyr::group_by(CTX_area,
                  CTX_facility_ID) %>%
  count %>% 
  ggplot2::ggplot(aes(x = CTX_area,
                      y = n)) + 
  ggplot2::geom_boxplot()  +
  ggplot2::coord_flip()
```

### Consultations by type of facility

Describe the distribution of consultations in dispensaries vs. health centres.

```{r}
prop.table(table(Type = df$CTX_facility_type)) %>% 
  knitr::kable()
```

```{r}
N <- nrow(df)
df %>%
  dplyr::group_by(CTX_facility_type) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = 1, y = n, fill = CTX_facility_type)) +
  geom_bar(stat="identity") +
  ylab("Number of consultations") +
  geom_text(aes(label=paste0(sprintf("%1.1f", 100 * n / N),"%")),
            position=position_stack(vjust=0.5)) +
  ggtitle("Distribution of consultations between dispensaries and health centres") +
  xlim(-1, 3) +
  theme_hc() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())
```
```{r}
df %>%
  dplyr::group_by(CTX_facility_type,
                  CTX_facility_ID) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = CTX_facility_type,
                      y = n)) + 
  ggplot2::geom_bar(position = position_dodge2(preserve = "single"),
                    stat="identity") +
  ggplot2::labs(x = "", y = "No. consultations") +
  ggthemes::theme_hc()
```
```{r}
df %>% 
  dplyr::group_by(CTX_facility_type,
                  CTX_facility_ID) %>%
  count %>% 
  ggplot2::ggplot(aes(x = CTX_facility_type,
                      y = n)) + 
  geom_boxplot() +
  ggplot2::coord_flip()
```

### Consultations by district

Describe the distribution of consultations by district (Kaliua vs. Sengerema vs. tanga)

```{r}
prop.table(table(District = df$CTX_district)) %>% 
  knitr::kable()
```

```{r}
N <- nrow(df)
df %>%
  dplyr::group_by(CTX_district) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = 1, y = n, fill = CTX_district)) +
  geom_bar(stat="identity") +
  ylab("Number of consultations") +
  geom_text(aes(label=paste0(sprintf("%1.1f", 100 * n / N),"%")),
            position=position_stack(vjust=0.5)) +
  ggtitle("Distribution of consultations between districts") +
  xlim(-1, 3) +
  theme_hc() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())
```

#### Number of consultations by facility within each district

```{r}
#| label: fig-nb-consultations-by-district
#| caption: Number of consultations by facility within each district.
df %>%
  dplyr::group_by(CTX_district,
                  CTX_facility_ID) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = CTX_district,
                      y = n)) + 
  ggplot2::geom_bar(position = position_dodge2(preserve = "single"),
                    stat="identity") +
  ggplot2::labs(x = "", y = "No. consultations") +
  ggthemes::theme_hc()
```

```{r}
df %>% 
  dplyr::group_by(CTX_district,
                  CTX_facility_ID) %>%
  count %>% 
  ggplot2::ggplot(aes(x = CTX_district,
                      y = n)) + 
  ggplot2::geom_boxplot() +
  ggplot2::coord_flip()
```
### Consultations by area, type of facility and district

```{r}
#| df-print: kable
table(Area = df$CTX_area,
      Type = df$CTX_facility_type,
      District = df$CTX_district) %>%
  knitr::kable()
```
## Patient characteristics

Describe and critically discuss the demographics, clinical presentation and clinical history of patients.

```{r}
df %>%
  dplyr::select(SDC_age_category,
                SDC_sex,
                CLIN_fever,
                CLIN_fever_onset_category,
                CLIN_diarrhoea,
                CLIN_cough,
                RX_preconsult_antibiotics,
                RX_preconsult_antimalarials) %>%
  gtsummary::tbl_summary(missing_text = "(Missing)")
```
```{r}
df %>%
  dplyr::select(SDC_age_category,
                SDC_sex,
                CLIN_fever,
                CLIN_fever_onset_category,
                CLIN_diarrhoea,
                CLIN_cough,
                RX_preconsult_antibiotics,
                RX_preconsult_antimalarials,
                CTX_facility_type) %>%
  gtsummary::tbl_summary(by = CTX_facility_type, missing_text = "(Missing)")
```

### Demographics

```{r}
apyramid::age_pyramid(data = df,
                      age_group = "SDC_age_category",
                      split_by = "SDC_sex",
                      na.rm = TRUE)
```
```{r}
df %>% 
  dplyr::group_by(CTX_facility_type,
                  SDC_age_category) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = SDC_age_category,
                      y = n,
                      fill = CTX_facility_type,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```

### Clinical presentation

#### Fever

```{r}
df %>% 
  dplyr::group_by(CLIN_fever,
                  SDC_age_category) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = SDC_age_category,
                      y = n,
                      fill = CLIN_fever,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```

```{r}
df %>%
  ggplot2::ggplot(aes(SDC_age_in_months, fill = CLIN_fever)) +
  ggplot2::geom_histogram(bins = 60) +
  xlab('Age in months')
```

#### Cough

```{r}
df %>% 
  dplyr::group_by(CLIN_cough,
                  SDC_age_category) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = SDC_age_category,
                      y = n,
                      fill = CLIN_cough,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```

```{r}
df %>%
  ggplot2::ggplot(aes(SDC_age_in_months, fill = CLIN_cough)) +
  ggplot2::geom_histogram(bins = 60) +
  xlab('Age in months')
```
#### Diarrhoea

```{r}
df %>% 
  dplyr::group_by(CLIN_diarrhoea,
                  SDC_age_category) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = SDC_age_category,
                      y = n,
                      fill = CLIN_diarrhoea,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```

```{r}
df %>%
  ggplot2::ggplot(aes(SDC_age_in_months, fill = CLIN_diarrhoea)) +
  ggplot2::geom_histogram(bins = 60) +
  xlab('Age in months')
```
#### Combination of symptoms

```{r}
UpSetR::upset(df %>%
                dplyr::mutate(Fever = 1 * (CLIN_fever == 1)) %>% 
                dplyr::mutate(Cough = 1 * (CLIN_cough == 1)) %>% 
                dplyr::mutate(Diarrhoea = 1 * (CLIN_diarrhoea == 1)) %>% 
                dplyr::select(Cough, Fever, Diarrhoea),
  sets = c("Cough", "Fever", "Diarrhoea"),
  order.by = "freq",
  sets.bar.color = c("blue", "red", "black"), # optional colors
  empty.intersections = "on",
  # nsets = 3,
  number.angles = 0,
  point.size = 3.5,
  line.size = 2, 
  mainbar.y.label = "Combination of symptoms",
  sets.x.label = "Children")
```

```{r}
UpSetR::upset(df %>%
                dplyr::filter(SDC_age_category == "<2 months") %>% 
                dplyr::mutate(Fever = 1 * (CLIN_fever == 1)) %>% 
                dplyr::mutate(Cough = 1 * (CLIN_cough == 1)) %>% 
                dplyr::mutate(Diarrhoea = 1 * (CLIN_diarrhoea == 1)) %>% 
                dplyr::select(Cough, Fever, Diarrhoea),
  sets = c("Cough", "Fever", "Diarrhoea"),
  order.by = "freq",
  sets.bar.color = c("blue", "red", "black"), # optional colors
  empty.intersections = "on",
  # nsets = 3,
  number.angles = 0,
  point.size = 3.5,
  line.size = 2, 
  mainbar.y.label = "Combination of symptoms",
  sets.x.label = "Children < 2 months")
```
```{r}
UpSetR::upset(df %>%
                dplyr::filter(SDC_age_category == "02-11 months") %>% 
                dplyr::mutate(Fever = 1 * (CLIN_fever == 1)) %>% 
                dplyr::mutate(Cough = 1 * (CLIN_cough == 1)) %>% 
                dplyr::mutate(Diarrhoea = 1 * (CLIN_diarrhoea == 1)) %>% 
                dplyr::select(Cough, Fever, Diarrhoea),
  sets = c("Cough", "Fever", "Diarrhoea"),
  order.by = "freq",
  sets.bar.color = c("blue", "red", "black"), # optional colors
  empty.intersections = "on",
  # nsets = 3,
  number.angles = 0,
  point.size = 3.5,
  line.size = 2, 
  mainbar.y.label = "Combination of symptoms",
  sets.x.label = "Children 2-11 months")
```

```{r}
UpSetR::upset(df %>%
                dplyr::filter(SDC_age_category == "12-23 months") %>% 
                dplyr::mutate(Fever = 1 * (CLIN_fever == 1)) %>% 
                dplyr::mutate(Cough = 1 * (CLIN_cough == 1)) %>% 
                dplyr::mutate(Diarrhoea = 1 * (CLIN_diarrhoea == 1)) %>% 
                dplyr::select(Cough, Fever, Diarrhoea),
  sets = c("Cough", "Fever", "Diarrhoea"),
  order.by = "freq",
  sets.bar.color = c("blue", "red", "black"), # optional colors
  empty.intersections = "on",
  # nsets = 3,
  number.angles = 0,
  point.size = 3.5,
  line.size = 2, 
  mainbar.y.label = "Combination of symptoms",
  sets.x.label = "Children 12-23 months")
```

```{r}
UpSetR::upset(df %>%
                dplyr::filter(SDC_age_category == "24-35 months") %>% 
                dplyr::mutate(Fever = 1 * (CLIN_fever == 1)) %>% 
                dplyr::mutate(Cough = 1 * (CLIN_cough == 1)) %>% 
                dplyr::mutate(Diarrhoea = 1 * (CLIN_diarrhoea == 1)) %>% 
                dplyr::select(Cough, Fever, Diarrhoea),
  sets = c("Cough", "Fever", "Diarrhoea"),
  order.by = "freq",
  sets.bar.color = c("blue", "red", "black"), # optional colors
  empty.intersections = "on",
  # nsets = 3,
  number.angles = 0,
  point.size = 3.5,
  line.size = 2, 
  mainbar.y.label = "Combination of symptoms",
  sets.x.label = "Children 24-35 months")
```

```{r}
UpSetR::upset(df %>%
                dplyr::filter(SDC_age_category == "36-47 months") %>% 
                dplyr::mutate(Fever = 1 * (CLIN_fever == 1)) %>% 
                dplyr::mutate(Cough = 1 * (CLIN_cough == 1)) %>% 
                dplyr::mutate(Diarrhoea = 1 * (CLIN_diarrhoea == 1)) %>% 
                dplyr::select(Cough, Fever, Diarrhoea),
  sets = c("Cough", "Fever", "Diarrhoea"),
  order.by = "freq",
  sets.bar.color = c("blue", "red", "black"), # optional colors
  empty.intersections = "on",
  # nsets = 3,
  number.angles = 0,
  point.size = 3.5,
  line.size = 2, 
  mainbar.y.label = "Combination of symptoms",
  sets.x.label = "Children 36-47 months")
```

```{r}
UpSetR::upset(df %>%
                dplyr::filter(SDC_age_category == "48-59 months") %>% 
                dplyr::mutate(Fever = 1 * (CLIN_fever == 1)) %>% 
                dplyr::mutate(Cough = 1 * (CLIN_cough == 1)) %>% 
                dplyr::mutate(Diarrhoea = 1 * (CLIN_diarrhoea == 1)) %>% 
                dplyr::select(Cough, Fever, Diarrhoea),
  sets = c("Cough", "Fever", "Diarrhoea"),
  order.by = "freq",
  sets.bar.color = c("blue", "red", "black"), # optional colors
  empty.intersections = "on",
  # nsets = 3,
  number.angles = 0,
  point.size = 3.5,
  line.size = 2, 
  mainbar.y.label = "Combination of symptoms",
  sets.x.label = "Children 48-59 months")
```
## Clinical assessments conducted during the consultation

Describe and critically discuss the clinical assessments (fever assessment, malaria test) conducted during the consultation.

```{r}
df %>%
  dplyr::select(CALC_temperature_measured,
                CALC_fever_measured,
                CALC_fever_all,
                TEST_malaria_done,
                TEST_malaria_type,
                TEST_malaria_result,
                DX_severe,
                DX_malaria,
                DX_malaria_severe,
                RX_antimalarials,
                RX_antimalarial_parenteral,
                RX_antibiotics,
                MGMT_referral_src_caregiver,
                MGMT_referral_src_registry) %>%
  gtsummary::tbl_summary(missing_text = "(Missing)")
```
```{r}
df %>%
  dplyr::select(CALC_temperature_measured,
                CALC_fever_measured,
                CALC_fever_all,
                TEST_malaria_done,
                TEST_malaria_type,
                TEST_malaria_result,
                DX_severe,
                DX_malaria,
                DX_malaria_severe,
                RX_antimalarials,
                RX_antimalarial_parenteral,
                RX_antibiotics,
                MGMT_referral_src_caregiver,
                MGMT_referral_src_registry,
                CTX_facility_type) %>%
  gtsummary::tbl_summary(by = CTX_facility_type,
                         missing_text = "(Missing)")
```

### Temperature measurement

Distribution of temperature measurements and associated factors

```{r}
N <- nrow(df)
df %>%
  dplyr::group_by(CALC_temperature_measured) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = 1, y = n, fill = CALC_temperature_measured)) +
  geom_bar(stat="identity") +
  ylab("Number of consultations") +
  geom_text(aes(label=paste0(sprintf("%1.1f", 100 * n / N),"%")),
            position=position_stack(vjust=0.5)) +
  ggtitle("Proportion of consultations with a temperature measurement recorded") +
  xlim(-1, 3) +
  theme_hc() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())
```
```{r}
df %>% 
  dplyr::group_by(CALC_temperature_measured,
                  CTX_facility_type) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = CTX_facility_type,
                      y = n,
                      fill = CALC_temperature_measured,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```

```{r}
#| fig.height: 10
df %>% 
  dplyr::group_by(CALC_temperature_measured,
                  CTX_facility_ID,
                  CTX_district,
                  CTX_facility_type) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = CTX_facility_ID,
                      y = n,
                      fill = CALC_temperature_measured,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent) +
  facet_grid( CTX_district ~ CTX_facility_type, space = "free", scales = "free")
```

```{r}
#| label: fig-temperature-range-global
#| fig.height: 3
#| fig-cap: "Distribution of temperature measurements"
df %>%
  ggplot2::ggplot(aes(x = 1,
                      y = MEAS_temperature)) +
  ggplot2::ylim(34, 43) + 
  ggplot2::xlim(-1, 3) + 
  ggplot2::geom_boxplot() + 
  labs(y = "Temperature (in Â°C)", x = "Facility") +
  theme_hc() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())
```

```{r}
#| label: fig-temperature-range-by-facility-type
#| fig.height: 3
#| fig-cap: "Distribution of temperature measurements by type of facility"
df %>%
  ggplot2::ggplot(aes(x = 1,
                      y = MEAS_temperature,
                      fill = CTX_facility_type)) +
  ggplot2::ylim(34, 43) + 
  ggplot2::xlim(0, 2) + 
  ggplot2::geom_boxplot() + 
  labs(y = "Temperature (in Â°C)", x = "Facility") +
  theme_hc() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())
```

### Fever assessment

Distribution of measured fever

```{r}
#| label: fig-measured-fever
#| fig-cap: "Proportion of consultations with a temperature superior or equal to 37.5Â°C among children with a temperature measurement"
df_temp <- df %>%
  dplyr::filter(CALC_temperature_measured == 1) 
N <- nrow(df_temp)
df_temp %>% 
  dplyr::group_by(CALC_fever_measured) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = 1, y = n, fill = CALC_fever_measured)) +
  geom_bar(stat="identity") +
  ylab("Number of consultations") +
  geom_text(aes(label=paste0(sprintf("%1.1f", 100 * n / N),"%")),
            position=position_stack(vjust=0.5)) +
  xlim(-1, 3) +
  theme_hc() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())
```

```{r}
N <- nrow(df)
df %>%
  dplyr::group_by(CALC_fever_measured) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = 1, y = n, fill = CALC_fever_measured)) +
  geom_bar(stat="identity") +
  ylab("Number of consultations") +
  geom_text(aes(label=paste0(sprintf("%1.1f", 100 * n / N),"%")),
            position=position_stack(vjust=0.5)) +
  ggtitle("Proportion of consultations with a temperature superior or equal to 37.5Â°C among all children") +
  xlim(-1, 3) +
  theme_hc() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())
```

```{r}
#| label: fig-temperature-range
#| fig.height: 8
#| fig-cap: "Range of temperature measurements for children with fever (1), without fever (2) and with unkwnown fever presentation (98) by facility"
df %>%
  ggplot2::ggplot(aes(x = CTX_facility_ID,
                      y = MEAS_temperature,
                      fill = CLIN_fever)) +
  ggplot2::ylim(34, 43) + 
  ggplot2::geom_boxplot() + 
  labs(y = "Temperature (in Â°C)", x = "Facility") +
  facet_grid( CTX_district ~ CTX_facility_type, space = "free", scales = "free")
```

```{r}
library(finalfit)
explanatory = c("SDC_age_category", 
                "CTX_district",
                "CTX_area",
                "CTX_facility_type", 
                "CLIN_fever")
dependent = "MEAS_temperature"
df %>% 
  finalfit::missing_compare(dependent, explanatory) %>% 
    knitr::kable(row.names=FALSE, align = c("l", "l", "r", "r", "r"))
```
### Malaria tests

```{r}
table("Fever measured" = df$CALC_fever_measured,
      "Malaria test done" = df$TEST_malaria_done) %>% 
  knitr::kable()
```

```{r}
#|fig-caption: Malaria treatment if malaria diagnosis / no malaria diagnosis
df %>% 
  dplyr::group_by(TEST_malaria_done,
                  CALC_fever_measured) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = CALC_fever_measured,
                      y = n,
                      fill = TEST_malaria_done,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```
```{r}
#|fig-caption: Malaria treatment if malaria diagnosis / no malaria diagnosis
df %>% 
  dplyr::group_by(TEST_malaria_done,
                  CLIN_fever) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = CLIN_fever,
                      y = n,
                      fill = TEST_malaria_done,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```

### Malaria diagnoses

```{r}
#|fig-caption: Malaria diagnoses by malaria test conducted
df %>% 
  dplyr::group_by(DX_malaria,
                  TEST_malaria_done) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = TEST_malaria_done,
                      y = n,
                      fill = DX_malaria,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```
```{r}
#|fig-caption: Malaria diagnoses by test results
df %>% 
  dplyr::filter(TEST_malaria_done == 1) %>% 
  dplyr::group_by(DX_malaria,
                  TEST_malaria_result) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = TEST_malaria_result,
                      y = n,
                      fill = DX_malaria,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```
### Malaria treatments

```{r}
#|fig-caption: Malaria treatment if malaria diagnosis / no malaria diagnosis
df %>% 
  dplyr::group_by(RX_antimalarials,
                  DX_malaria) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = DX_malaria,
                      y = n,
                      fill = RX_antimalarials,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```
```{r}
#|fig-caption: Parenteral treatment if severe malaria diagnosis / non-severe malaria diagnosis
df %>% 
  dplyr::group_by(RX_antimalarials,
                  DX_malaria) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = DX_malaria,
                      y = n,
                      fill = RX_antimalarials,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```

```{r}
#|fig-caption: Malaria treatment by malaria test results (positive / negative)
df %>% 
  dplyr::filter(TEST_malaria_done == 1) %>% 
  dplyr::group_by(RX_antimalarials,
                  TEST_malaria_result) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = TEST_malaria_result,
                      y = n,
                      fill = RX_antimalarials,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```
```{r}
#|fig-caption: Malaria treatment by fever and neither positive test / malaria diagnosis
df %>% 
  dplyr::filter((TEST_malaria_result != 1)) %>% 
  dplyr::group_by(RX_antimalarials,
                  CLIN_fever) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = CLIN_fever,
                      y = n,
                      fill = RX_antimalarials,
                      label = n)) +
  ggplot2::geom_col(position = "fill") +
  ggplot2::geom_text(aes(label=n),
            position=position_fill(vjust=0.5)) +
  scale_y_continuous(labels = scales::percent)
```
```{r}
df <- df %>%
  dplyr::mutate(TEST_malaria_positive = 1* (TEST_malaria_result == 1))
table(Result = df$TEST_malaria_result,
      Diagnosis = df$DX_malaria,
      Antimalarials = df$RX_antimalarials) %>% 
  knitr::kable()
```

#### Combination of treatments

```{r}
UpSetR::upset(df %>%
                dplyr::select(RX_ACT, RX_AL, RX_artemether, RX_artesunate, RX_primaquine, RX_quinine) %>% 
                dplyr::mutate(across(c(RX_ACT, RX_AL, RX_artemether, RX_artesunate, RX_primaquine, RX_quinine), as.integer)),
  sets = c("RX_ACT", "RX_AL", "RX_artemether", "RX_artesunate", "RX_primaquine", "RX_quinine"),
  order.by = "freq",
  sets.bar.color = c("blue", "red", "yellow", "darkgreen", "orange", "green"), # optional colors
  empty.intersections = "on",
  # nsets = 3,
  number.angles = 0,
  point.size = 3.5,
  line.size = 2, 
  mainbar.y.label = "Antimalarial prescriptions",
  sets.x.label = "Children with antimalarials")
```

## Data flow from fever assessment to malaria treatment (Sankey diagrams)

```{r}
df <- df %>%
  dplyr::mutate(CALC_temperature_measured_char = ifelse(!is.na(MEAS_temperature), "Temperature recorded", "Temperature not recorded")) %>%
  dplyr::mutate(CALC_fever_char = ifelse(MEAS_temperature >= 37.5, "Temperature >= 37.5Â°C", "Temperature < 37.5Â°C")) %>%
  dplyr::mutate(CLIN_fever_char = ifelse(CLIN_fever == 1, "History of fever", "No history of fever")) %>% 
  dplyr::mutate(TEST_malaria_done_char = ifelse(TEST_malaria_done == 1, "Malaria test recorded", "Malaria test not recorded")) %>% 
  dplyr::mutate(
    TEST_malaria_result_char = dplyr::case_when(
      TEST_malaria_result == 0 ~ "Malaria result negative",
      TEST_malaria_result == 1 ~ "Malaria result positive",
      TEST_malaria_result == 2 ~ "Malaria result indeterminate",
      TEST_malaria_result == 95 ~ "Malaria result unreadable",
      TEST_malaria_result == 98 ~ "Malaria result unknown",
      TRUE ~ ""
    )
  ) %>%
  dplyr::mutate(DX_malaria_char = ifelse(DX_malaria == 1, "Malaria diagnosis", "No malaria diagnosis")) %>% 
  dplyr::mutate(RX_antimalarials_char = ifelse(RX_antimalarials == 1, "Malaria treatment", "No malaria treatment"))
```

::: column-page
```{r}
link_CLIN_fever_and_MEAS_temperature <- df %>%
  select(CLIN_fever_char, CALC_temperature_measured_char) %>%
  count(CLIN_fever_char, CALC_temperature_measured_char) %>%
  rename(source = CLIN_fever_char,
         target = CALC_temperature_measured_char)

fever_measured_links <- df %>%
  dplyr::filter(CALC_temperature_measured == 1) %>% 
  select(CALC_temperature_measured_char, CALC_fever_char) %>%
  count(CALC_temperature_measured_char, CALC_fever_char) %>% 
  rename(source = CALC_temperature_measured_char,
         target = CALC_fever_char)

malaria_test_links <- df %>%
  dplyr::filter(CALC_temperature_measured == 1) %>%
  select(CALC_fever_char, TEST_malaria_done_char) %>%
  count(CALC_fever_char, TEST_malaria_done_char) %>%
  rename(source = CALC_fever_char,
         target = TEST_malaria_done_char)

malaria_test_links2 <- df %>%
  dplyr::filter(CALC_temperature_measured == 0) %>%
  select(CALC_temperature_measured_char, TEST_malaria_done_char) %>%
  count(CALC_temperature_measured_char, TEST_malaria_done_char) %>%
  rename(source = CALC_temperature_measured_char,
         target = TEST_malaria_done_char)

malaria_results_links <- df %>%
  dplyr::filter(TEST_malaria_done == 1) %>% 
  select(TEST_malaria_done_char, TEST_malaria_result_char) %>%
  count(TEST_malaria_done_char, TEST_malaria_result_char) %>%
  rename(source = TEST_malaria_done_char,
         target = TEST_malaria_result_char)

malaria_diagnosis_links <- df %>%
  dplyr::filter(TEST_malaria_done == 1) %>% 
  select(TEST_malaria_result_char, DX_malaria_char) %>%
  count(TEST_malaria_result_char, DX_malaria_char) %>%
  rename(source = TEST_malaria_result_char,
         target = DX_malaria_char)

malaria_diagnosis_links2 <- df %>%
  dplyr::filter(TEST_malaria_done == 0) %>% 
  select(TEST_malaria_done_char, DX_malaria_char) %>%
  count(TEST_malaria_done_char, DX_malaria_char) %>%
  rename(source = TEST_malaria_done_char,
         target = DX_malaria_char)

antimalarials_links <- df %>%
  select(DX_malaria_char, RX_antimalarials_char) %>%
  count(DX_malaria_char, RX_antimalarials_char) %>%
  rename(source = DX_malaria_char,
         target = RX_antimalarials_char)

# combine links
links <- bind_rows(link_CLIN_fever_and_MEAS_temperature,
                   fever_measured_links,
                   malaria_test_links,
                   malaria_test_links2,
                   malaria_results_links,
                   malaria_diagnosis_links,
                   malaria_diagnosis_links2,
                   antimalarials_links)

# The unique node names
nodes <- data.frame(
  name=c(as.character(links$source), as.character(links$target)) %>% 
    unique()
  )

# match to numbers, not names
links$IDsource <- match(links$source, nodes$name)-1 
links$IDtarget <- match(links$target, nodes$name)-1

p <- sankeyNetwork(
  Links = links,
  Nodes = nodes,
  Source = "IDsource",
  Target = "IDtarget",
  Value = "n",
  NodeID = "name",
  units = "children",
  fontSize = 12,
  nodeWidth = 30,
  iterations = 0,
  sinksRight = FALSE)        # ensure node order is as in data
p

#links$group <- as.factor(c("type_a","type_a","type_a","type_b","type_b","type_b"))
 
# Add a 'group' column to each node. Here I decide to put all of them in the same group to make them grey
#nodes$group <- as.factor(c("my_unique_group"))
 
# Give a color for each group:
#my_color <- 'd3.scaleOrdinal() .domain(["type_a", "type_b", "my_unique_group"]) .range(["#69b3a2", "steelblue", "grey"])'
```
:::

### Facility F8793

::: column-page
```{r}
facility1_df <- df %>%
  dplyr::filter(CTX_facility_ID == "F8793")

link_CLIN_fever_and_MEAS_temperature <- facility1_df %>%
  select(CLIN_fever_char, CALC_temperature_measured_char) %>%
  count(CLIN_fever_char, CALC_temperature_measured_char) %>%
  rename(source = CLIN_fever_char,
         target = CALC_temperature_measured_char)

fever_measured_links <- facility1_df %>%
  dplyr::filter(CALC_temperature_measured == 1) %>% 
  select(CALC_temperature_measured_char, CALC_fever_char) %>%
  count(CALC_temperature_measured_char, CALC_fever_char) %>% 
  rename(source = CALC_temperature_measured_char,
         target = CALC_fever_char)

malaria_test_links <- facility1_df %>%
  dplyr::filter(CALC_temperature_measured == 1) %>%
  select(CALC_fever_char, TEST_malaria_done_char) %>%
  count(CALC_fever_char, TEST_malaria_done_char) %>%
  rename(source = CALC_fever_char,
         target = TEST_malaria_done_char)

malaria_test_links2 <- facility1_df %>%
  dplyr::filter(CALC_temperature_measured == 0) %>%
  select(CALC_temperature_measured_char, TEST_malaria_done_char) %>%
  count(CALC_temperature_measured_char, TEST_malaria_done_char) %>%
  rename(source = CALC_temperature_measured_char,
         target = TEST_malaria_done_char)

malaria_results_links <- facility1_df %>%
  dplyr::filter(TEST_malaria_done == 1) %>% 
  select(TEST_malaria_done_char, TEST_malaria_result_char) %>%
  count(TEST_malaria_done_char, TEST_malaria_result_char) %>%
  rename(source = TEST_malaria_done_char,
         target = TEST_malaria_result_char)

malaria_diagnosis_links <- facility1_df %>%
  dplyr::filter(TEST_malaria_done == 1) %>% 
  select(TEST_malaria_result_char, DX_malaria_char) %>%
  count(TEST_malaria_result_char, DX_malaria_char) %>%
  rename(source = TEST_malaria_result_char,
         target = DX_malaria_char)

malaria_diagnosis_links2 <- facility1_df %>%
  dplyr::filter(TEST_malaria_done == 0) %>% 
  select(TEST_malaria_done_char, DX_malaria_char) %>%
  count(TEST_malaria_done_char, DX_malaria_char) %>%
  rename(source = TEST_malaria_done_char,
         target = DX_malaria_char)

antimalarials_links <- facility1_df %>%
  select(DX_malaria_char, RX_antimalarials_char) %>%
  count(DX_malaria_char, RX_antimalarials_char) %>%
  rename(source = DX_malaria_char,
         target = RX_antimalarials_char)

# combine links
links <- bind_rows(link_CLIN_fever_and_MEAS_temperature,
                   fever_measured_links,
                   malaria_test_links,
                   malaria_test_links2,
                   malaria_results_links,
                   malaria_diagnosis_links,
                   malaria_diagnosis_links2,
                   antimalarials_links)

# The unique node names
nodes <- data.frame(
  name=c(as.character(links$source), as.character(links$target)) %>% 
    unique()
  )

# match to numbers, not names
links$IDsource <- match(links$source, nodes$name)-1 
links$IDtarget <- match(links$target, nodes$name)-1

p <- sankeyNetwork(
  Links = links,
  Nodes = nodes,
  Source = "IDsource",
  Target = "IDtarget",
  Value = "n",
  NodeID = "name",
  units = "children",
  fontSize = 12,
  nodeWidth = 30,
  iterations = 0,
  sinksRight = FALSE)        # ensure node order is as in data
p
```
:::

### Facility F7729

::: column-page
```{r}
facility1_df <- df %>% dplyr::filter(CTX_facility_ID == "F7729")

link_CLIN_fever_and_MEAS_temperature <- facility1_df %>%
  select(CLIN_fever_char, CALC_temperature_measured_char) %>%
  count(CLIN_fever_char, CALC_temperature_measured_char) %>%
  rename(source = CLIN_fever_char,
         target = CALC_temperature_measured_char)

fever_measured_links <- facility1_df %>%
  dplyr::filter(CALC_temperature_measured == 1) %>% 
  select(CALC_temperature_measured_char, CALC_fever_char) %>%
  count(CALC_temperature_measured_char, CALC_fever_char) %>% 
  rename(source = CALC_temperature_measured_char,
         target = CALC_fever_char)

malaria_test_links <- facility1_df %>%
  dplyr::filter(CALC_temperature_measured == 1) %>%
  select(CALC_fever_char, TEST_malaria_done_char) %>%
  count(CALC_fever_char, TEST_malaria_done_char) %>%
  rename(source = CALC_fever_char,
         target = TEST_malaria_done_char)

malaria_test_links2 <- facility1_df %>%
  dplyr::filter(CALC_temperature_measured == 0) %>%
  select(CALC_temperature_measured_char, TEST_malaria_done_char) %>%
  count(CALC_temperature_measured_char, TEST_malaria_done_char) %>%
  rename(source = CALC_temperature_measured_char,
         target = TEST_malaria_done_char)

malaria_results_links <- facility1_df %>%
  dplyr::filter(TEST_malaria_done == 1) %>% 
  select(TEST_malaria_done_char, TEST_malaria_result_char) %>%
  count(TEST_malaria_done_char, TEST_malaria_result_char) %>%
  rename(source = TEST_malaria_done_char,
         target = TEST_malaria_result_char)

malaria_diagnosis_links <- facility1_df %>%
  dplyr::filter(TEST_malaria_done == 1) %>% 
  select(TEST_malaria_result_char, DX_malaria_char) %>%
  count(TEST_malaria_result_char, DX_malaria_char) %>%
  rename(source = TEST_malaria_result_char,
         target = DX_malaria_char)

malaria_diagnosis_links2 <- facility1_df %>%
  dplyr::filter(TEST_malaria_done == 0) %>% 
  select(TEST_malaria_done_char, DX_malaria_char) %>%
  count(TEST_malaria_done_char, DX_malaria_char) %>%
  rename(source = TEST_malaria_done_char,
         target = DX_malaria_char)

antimalarials_links <- facility1_df %>%
  select(DX_malaria_char, RX_antimalarials_char) %>%
  count(DX_malaria_char, RX_antimalarials_char) %>%
  rename(source = DX_malaria_char,
         target = RX_antimalarials_char)

# combine links
links <- bind_rows(link_CLIN_fever_and_MEAS_temperature,
                   fever_measured_links,
                   malaria_test_links,
                   malaria_test_links2,
                   malaria_results_links,
                   malaria_diagnosis_links,
                   malaria_diagnosis_links2,
                   antimalarials_links)

# The unique node names
nodes <- data.frame(
  name=c(as.character(links$source), as.character(links$target)) %>% 
    unique()
  )

# match to numbers, not names
links$IDsource <- match(links$source, nodes$name)-1 
links$IDtarget <- match(links$target, nodes$name)-1

p <- sankeyNetwork(
  Links = links,
  Nodes = nodes,
  Source = "IDsource",
  Target = "IDtarget",
  Value = "n",
  NodeID = "name",
  units = "children",
  fontSize = 12,
  nodeWidth = 30,
  iterations = 0,
  sinksRight = FALSE)        # ensure node order is as in data
p
```
:::