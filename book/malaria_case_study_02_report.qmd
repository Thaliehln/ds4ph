---
title: ":orange_book: Malaria case study - Report #2"
execute:
  echo: false
  warning: false
from: markdown+emoji
toc: true
number-sections: true
---

## Introduction

In this section we will explore the impact of the presence of research staff observing consultations as part of a Service Provision Assessment (SPA) on RCT data.

:::callout-note
Add sensitivity analysis definition
:::

```{r}
library(openxlsx)
library(dplyr)
library(skimr)
library(gtsummary)
library(finalfit)
library(ggplot2)
library(ggthemes)
library(networkD3) # For alluvial/Sankey diagrams
library(tidyverse)
```

The data set used for this report is stored in **dataset2.dta**.

```{r}
# 1. Import the dataset and store it into a dataframe called **df**. 
df <- openxlsx::read.xlsx("./data/dataset2.xlsx")
```
```{r}
df$SDC_sex = as.factor(df$SDC_sex)
df$CLIN_fever = as.factor(df$CLIN_fever)
df$CLIN_cough = as.factor(df$CLIN_cough)
df$CLIN_diarrhoea = as.factor(df$CLIN_diarrhoea)
df$RX_preconsult_antibiotics = as.factor(df$RX_preconsult_antibiotics)
df$RX_preconsult_antimalarials = as.factor(df$RX_preconsult_antimalarials)
df$CTX_district = as.factor(df$CTX_district)
df$CTX_area = as.factor(df$CTX_area)
df$CTX_facility_type = as.factor(df$CTX_facility_type)
df$CTX_SPA_obs = as.factor(df$CTX_SPA_obs)
df$CTX_SPA_obs_after_lab = as.factor(df$CTX_SPA_obs_after_lab)
```

```{r}
df <- df %>%
  dplyr::mutate(CALC_temperature_measured = 1 * (!is.na(MEAS_temperature))) %>%
  dplyr::mutate(CALC_fever = 1 * (MEAS_temperature >= 37.5)) %>%
  dplyr::mutate(CALC_fever_or_temp = (CLIN_fever == 1) | (CALC_fever == 1))
```

```{r}
df <- df %>%
  dplyr::mutate(CALC_temperature_measured_char = ifelse(!is.na(MEAS_temperature), "Temperature recorded", "Temperature not recorded")) %>%
  dplyr::mutate(CALC_fever_char = ifelse(MEAS_temperature >= 37.5, "Temperature >= 37.5°C", "Temperature < 37.5°C")) %>%
  dplyr::mutate(CLIN_fever_char = ifelse(CLIN_fever == 1, "History of fever", "No history of fever")) %>% 
  dplyr::mutate(TEST_malaria_done_char = ifelse(TEST_malaria_done == 1, "Malaria test recorded", "Malaria test not recorded")) %>% 
  dplyr::mutate(
    TEST_malaria_result_char = dplyr::case_when(
      TEST_malaria_result == 0 ~ "Malaria result negative",
      TEST_malaria_result == 1 ~ "Malaria result positive",
      TEST_malaria_result == 2 ~ "Malaria result indeterminate",
      TEST_malaria_result == 95 ~ "Malaria result unreadable",
      TEST_malaria_result == 98 ~ "Malaria result unknown",
      TRUE ~ ""
    )
  ) %>%
  dplyr::mutate(DX_malaria_char = ifelse(DX_malaria == 1, "Malaria diagnosis", "No malaria diagnosis")) %>% 
  dplyr::mutate(RX_antimalarials_char = ifelse(RX_antimalarials == 1, "Malaria treatment", "No malaria treatment"))
```

```{r}
df <- df %>%
  dplyr::mutate(
    SDC_age_category = dplyr::case_when(
      SDC_age_in_months < 2 ~ "<2 months",
      SDC_age_in_months >= 2 & SDC_age_in_months < 12 ~ "02-11 months",
      SDC_age_in_months >= 12 & SDC_age_in_months < 24 ~ "12-23 months",
      SDC_age_in_months >= 24 & SDC_age_in_months < 36 ~ "24-35 months",
      SDC_age_in_months >= 36 & SDC_age_in_months < 48 ~ "36-47 months",
      SDC_age_in_months >= 48 & SDC_age_in_months < 60 ~ "48-59 months",
      TRUE ~ ""
    )
  ) %>% 
  dplyr::mutate(
    CLIN_fever_onset_category = dplyr::case_when(
      CLIN_fever_onset < 2 ~ "<2 days",
      CLIN_fever_onset >= 2 & CLIN_fever_onset < 4 ~ "2-3 days",
      CLIN_fever_onset >= 4 & CLIN_fever_onset < 7 ~ "4-6 days",
      CLIN_fever_onset >= 7 ~ ">= 7 days",
      TRUE ~ ""
    )
  )
```

```{r}
df$SDC_age_category = as.factor(df$SDC_age_category)
df$CLIN_fever_onset = as.factor(df$CLIN_fever_onset)
```

```{r}
df <- df %>%
  dplyr::mutate(CALC_temperature_measured = 1 * (!is.na(MEAS_temperature))) %>%
  dplyr::mutate(CALC_fever_measured = 1 * (MEAS_temperature >= 37.5)) %>%
  dplyr::mutate(CALC_fever_all = 1 * ((CLIN_fever == 1) | (!is.na(CALC_fever_measured) & (CALC_fever_measured == 1)))) %>% 
  dplyr::mutate(across(c(CALC_temperature_measured,
                         CALC_fever_measured,
                         CALC_fever_all),
                       factor))
```

```{r}
df2 <- data.frame(df)
df2$CTX_SPA_obs <- "All"
df3 <- df %>%
  dplyr::filter(CTX_SPA_obs == 1 | CTX_SPA_obs_after_lab == 1)
df3$CTX_SPA_obs <- "Observed"
df4 <- rbind(df2, df3)
```

## Descriptive statistics

### Population characteristics

```{r}
df4 %>%
  dplyr::select(SDC_age_category,
                SDC_sex,
                CLIN_fever,
                CLIN_fever_onset_category,
                CLIN_diarrhoea,
                CLIN_cough,
                RX_preconsult_antibiotics,
                RX_preconsult_antimalarials,
                CTX_district,
                CTX_area,
                CTX_facility_type,
                CTX_SPA_obs) %>%
  gtsummary::tbl_summary(by = CTX_SPA_obs, missing_text = "(Missing)") %>%
  gtsummary::add_p()
```
### Clinical management

```{r}
df4 %>%
  dplyr::select(CALC_temperature_measured,
                CALC_fever_measured,
                CALC_fever_all,
                TEST_malaria_done,
                TEST_malaria_type,
                TEST_malaria_result,
                DX_severe,
                DX_malaria,
                DX_malaria_severe,
                RX_antimalarials,
                RX_antimalarial_parenteral,
                RX_antibiotics,
                MGMT_referral_src_caregiver,
                MGMT_referral_src_registry,
                CTX_SPA_obs) %>%
  gtsummary::tbl_summary(by = CTX_SPA_obs, missing_text = "(Missing)") %>%
  gtsummary::add_p()
```

## From fever assessment to malaria treatment

### RCT population

::: column-page
```{r}
link_CLIN_fever_and_MEAS_temperature <- df %>%
  select(CLIN_fever_char, CALC_temperature_measured_char) %>%
  count(CLIN_fever_char, CALC_temperature_measured_char) %>%
  rename(source = CLIN_fever_char,
         target = CALC_temperature_measured_char)

fever_measured_links <- df %>%
  dplyr::filter(CALC_temperature_measured == 1) %>% 
  select(CALC_temperature_measured_char, CALC_fever_char) %>%
  count(CALC_temperature_measured_char, CALC_fever_char) %>% 
  rename(source = CALC_temperature_measured_char,
         target = CALC_fever_char)

malaria_test_links <- df %>%
  dplyr::filter(CALC_temperature_measured == 1) %>%
  select(CALC_fever_char, TEST_malaria_done_char) %>%
  count(CALC_fever_char, TEST_malaria_done_char) %>%
  rename(source = CALC_fever_char,
         target = TEST_malaria_done_char)

malaria_test_links2 <- df %>%
  dplyr::filter(CALC_temperature_measured == 0) %>%
  select(CALC_temperature_measured_char, TEST_malaria_done_char) %>%
  count(CALC_temperature_measured_char, TEST_malaria_done_char) %>%
  rename(source = CALC_temperature_measured_char,
         target = TEST_malaria_done_char)

malaria_results_links <- df %>%
  dplyr::filter(TEST_malaria_done == 1) %>% 
  select(TEST_malaria_done_char, TEST_malaria_result_char) %>%
  count(TEST_malaria_done_char, TEST_malaria_result_char) %>%
  rename(source = TEST_malaria_done_char,
         target = TEST_malaria_result_char)

malaria_diagnosis_links <- df %>%
  dplyr::filter(TEST_malaria_done == 1) %>% 
  select(TEST_malaria_result_char, DX_malaria_char) %>%
  count(TEST_malaria_result_char, DX_malaria_char) %>%
  rename(source = TEST_malaria_result_char,
         target = DX_malaria_char)

malaria_diagnosis_links2 <- df %>%
  dplyr::filter(TEST_malaria_done == 0) %>% 
  select(TEST_malaria_done_char, DX_malaria_char) %>%
  count(TEST_malaria_done_char, DX_malaria_char) %>%
  rename(source = TEST_malaria_done_char,
         target = DX_malaria_char)

antimalarials_links <- df %>%
  select(DX_malaria_char, RX_antimalarials_char) %>%
  count(DX_malaria_char, RX_antimalarials_char) %>%
  rename(source = DX_malaria_char,
         target = RX_antimalarials_char)

# combine links
links <- bind_rows(link_CLIN_fever_and_MEAS_temperature,
                   fever_measured_links,
                   malaria_test_links,
                   malaria_test_links2,
                   malaria_results_links,
                   malaria_diagnosis_links,
                   malaria_diagnosis_links2,
                   antimalarials_links)

# The unique node names
nodes <- data.frame(
  name=c(as.character(links$source), as.character(links$target)) %>% 
    unique()
  )

# match to numbers, not names
links$IDsource <- match(links$source, nodes$name)-1 
links$IDtarget <- match(links$target, nodes$name)-1

p <- sankeyNetwork(
  Links = links,
  Nodes = nodes,
  Source = "IDsource",
  Target = "IDtarget",
  Value = "n",
  NodeID = "name",
  units = "children",
  fontSize = 12,
  nodeWidth = 30,
  iterations = 0,
  sinksRight = FALSE)        # ensure node order is as in data
p

#links$group <- as.factor(c("type_a","type_a","type_a","type_b","type_b","type_b"))
 
# Add a 'group' column to each node. Here I decide to put all of them in the same group to make them grey
#nodes$group <- as.factor(c("my_unique_group"))
 
# Give a color for each group:
#my_color <- 'd3.scaleOrdinal() .domain(["type_a", "type_b", "my_unique_group"]) .range(["#69b3a2", "steelblue", "grey"])'
```
:::

### SPA (sub)-population

::: column-page
```{r}
link_CLIN_fever_and_MEAS_temperature <- df3 %>%
  select(CLIN_fever_char, CALC_temperature_measured_char) %>%
  count(CLIN_fever_char, CALC_temperature_measured_char) %>%
  rename(source = CLIN_fever_char,
         target = CALC_temperature_measured_char)

fever_measured_links <- df3 %>%
  dplyr::filter(CALC_temperature_measured == 1) %>% 
  select(CALC_temperature_measured_char, CALC_fever_char) %>%
  count(CALC_temperature_measured_char, CALC_fever_char) %>% 
  rename(source = CALC_temperature_measured_char,
         target = CALC_fever_char)

malaria_test_links <- df3 %>%
  dplyr::filter(CALC_temperature_measured == 1) %>%
  select(CALC_fever_char, TEST_malaria_done_char) %>%
  count(CALC_fever_char, TEST_malaria_done_char) %>%
  rename(source = CALC_fever_char,
         target = TEST_malaria_done_char)

malaria_test_links2 <- df3 %>%
  dplyr::filter(CALC_temperature_measured == 0) %>%
  select(CALC_temperature_measured_char, TEST_malaria_done_char) %>%
  count(CALC_temperature_measured_char, TEST_malaria_done_char) %>%
  rename(source = CALC_temperature_measured_char,
         target = TEST_malaria_done_char)

malaria_results_links <- df3 %>%
  dplyr::filter(TEST_malaria_done == 1) %>% 
  select(TEST_malaria_done_char, TEST_malaria_result_char) %>%
  count(TEST_malaria_done_char, TEST_malaria_result_char) %>%
  rename(source = TEST_malaria_done_char,
         target = TEST_malaria_result_char)

malaria_diagnosis_links <- df3 %>%
  dplyr::filter(TEST_malaria_done == 1) %>% 
  select(TEST_malaria_result_char, DX_malaria_char) %>%
  count(TEST_malaria_result_char, DX_malaria_char) %>%
  rename(source = TEST_malaria_result_char,
         target = DX_malaria_char)

malaria_diagnosis_links2 <- df3 %>%
  dplyr::filter(TEST_malaria_done == 0) %>% 
  select(TEST_malaria_done_char, DX_malaria_char) %>%
  count(TEST_malaria_done_char, DX_malaria_char) %>%
  rename(source = TEST_malaria_done_char,
         target = DX_malaria_char)

antimalarials_links <- df3 %>%
  select(DX_malaria_char, RX_antimalarials_char) %>%
  count(DX_malaria_char, RX_antimalarials_char) %>%
  rename(source = DX_malaria_char,
         target = RX_antimalarials_char)

# combine links
links <- bind_rows(link_CLIN_fever_and_MEAS_temperature,
                   fever_measured_links,
                   malaria_test_links,
                   malaria_test_links2,
                   malaria_results_links,
                   malaria_diagnosis_links,
                   malaria_diagnosis_links2,
                   antimalarials_links)

# The unique node names
nodes <- data.frame(
  name=c(as.character(links$source), as.character(links$target)) %>% 
    unique()
  )

# match to numbers, not names
links$IDsource <- match(links$source, nodes$name)-1 
links$IDtarget <- match(links$target, nodes$name)-1

p <- sankeyNetwork(
  Links = links,
  Nodes = nodes,
  Source = "IDsource",
  Target = "IDtarget",
  Value = "n",
  NodeID = "name",
  units = "children",
  fontSize = 12,
  nodeWidth = 30,
  iterations = 0,
  sinksRight = FALSE)        # ensure node order is as in data
p

#links$group <- as.factor(c("type_a","type_a","type_a","type_b","type_b","type_b"))
 
# Add a 'group' column to each node. Here I decide to put all of them in the same group to make them grey
#nodes$group <- as.factor(c("my_unique_group"))
 
# Give a color for each group:
#my_color <- 'd3.scaleOrdinal() .domain(["type_a", "type_b", "my_unique_group"]) .range(["#69b3a2", "steelblue", "grey"])'
```
:::