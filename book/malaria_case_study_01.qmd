---
title: ":orange_book: Malaria case study - Part 1"
warning: false
---

## Introduction

### Overview

These pages will demonstrate how to use Quarto to data from Tanzania.

### Learning objectives

-   Test

## Malaria research questions

Research questions in an enumerated list

## Getting started

### Access the Quarto template

Download the Quarto template used for this case study (add link) using GitHub.

#### Quarto resources

Review the R Basics page "Reading a RMarkdown Script", or reference these resources: Rmarkdown introduction and Rmarkdown authoring basics.

::: panel-tabset
#### :pencil2: Exercise 1

``` {{r}}
install.packages("ggplot2")
install.packages("ggthemes")
```

```{r}
library(haven)
library(RStata)
library(reticulate)
library(dplyr)
library(skimr)
library(openxlsx)
library(gtsummary)
library(finalfit)
library(ggplot2)
library(ggthemes)
```
:::

### Import the data

::: panel-tabset
#### :pencil2: Exercise 1

Import the dataset and store it into a dataframe called **df**. Display the first 5 rows and columns `child_ID`, `CONSULT_month`, `CONSULT_district`, `SDC_age_in_month`

::: callout-tip
Refer to @sec-import-data-from-files
:::

```{r}
#| echo: fenced
# Write your code here
```

#### Stata

```{r}
#| echo: fenced
stata_df <- haven::read_dta("./data/dataset1.dta")
```

```{r}
#| echo: fenced
#| df-print: kable
stata_df %>%
  head(5) %>%
  dplyr::select(child_ID,
                CONSULT_month,
                CONSULT_district,
                SDC_age_in_month) %>%
  knitr::kable()
```

#### R

```{r}
#| echo: fenced
df <- openxlsx::read.xlsx("./data/dataset1.xlsx")
```

```{r}
#| echo: fenced
#| df-print: kable
df %>%
  head(5) %>%
  dplyr::select(child_ID,
                CONSULT_month,
                CONSULT_district,
                SDC_age_in_month) %>%
  knitr::kable()
```
:::

### Dataset description

We will be using data and examples from a real consultation data which occurred in Tanzania between **start date** and **end date**.

DISCLAIMER: The Ifakara Health Institute has approved the use of this data for training purposes. Please note, that some data has been adapted in order to best achieve training objectives. No personally indentifiable information have been kept in this dataset.

Information about the consultations of **10,308 children \[1 day - 59 months\]** from **18 facilities** (dispensaries and health centres) in **Kaliua** District, **Sengerema** District and **Tanga** District, Tanzania.

::: {#fig-study-area layout="[[1,1], [1, 1]]"}
![](images/tanzania_map-01.png){#fig-tanzania-study-regions}

![](images/mwanza_map.png){#fig-mwanza-study-district}

![](images/kaliua_map.png){#fig-kaliua-study-district}

![](images/tanga_map.png){#fig-tanga-study-district}

Study area
:::

Data were collected using *ODK* (ODK Collect, ODK Central) between **start date** and **end date**. Data were made available by IHI and Swiss TPH and the Tools for Integrated Management of Childhood Illness (TIMCI) project.

Data are stored in **dataset1.dta**.

### Data collection

Research assistants recorded the following information from different sources.

+-------------------------------------+--------+--------------------------------------+
| Information                         | Prefix | Source                               |
+:====================================+:======:+:====================================:+
| Context                             | CTX    | Metadata                             |
+-------------------------------------+--------+--------------------------------------+
| Sociodemographics                   | SDC    | Caregiver                            |
+-------------------------------------+--------+--------------------------------------+
| Clinical presentation               | CLIN   | Caregiver                            |
+-------------------------------------+--------+--------------------------------------+
| Laboratory investigations           | TEST   | Child booklet or facility MTUHA book |
+-------------------------------------+--------+--------------------------------------+
| Diagnoses                           | DX     | Child booklet or facility MTUHA book |
+-------------------------------------+--------+--------------------------------------+
| Treatments                          | RX     |                                      |
+-------------------------------------+--------+--------------------------------------+
| -   before consultation             |        | Caregiver                            |
+-------------------------------------+--------+--------------------------------------+
| -   as a result of the consultation |        | Child booklet or facility MTUHA book |
+-------------------------------------+--------+--------------------------------------+
| Referral advice                     | MGMT   |                                      |
+-------------------------------------+--------+--------------------------------------+
|                                     |        | Caregiver                            |
+-------------------------------------+--------+--------------------------------------+
|                                     |        | Child booklet or facility MTUHA book |
+-------------------------------------+--------+--------------------------------------+

: Types and sources of information

### Data preparation

Data cleaning and data de-identification

Personally identifiable information (PII) were removed.

## Population characteristics

### Codebook

+-----------------------------+---------------+
| Variable                    | Coding        |
+=============================+===============+
| SDC_age_in_month            |               |
+-----------------------------+---------------+
| SDC_sex                     | 1: male\      |
|                             | 2: female\    |
|                             | 98: unknown   |
+-----------------------------+---------------+
| CLIN_fever                  | 0: no\        |
|                             | 1: yes\       |
|                             | 98: not sure  |
+-----------------------------+---------------+
| CLIN_fever_onset            |               |
+-----------------------------+---------------+
| CLIN_cough                  | 0: no\        |
|                             | 1: yes\       |
|                             | 98: not sure  |
+-----------------------------+---------------+
| CLIN_diarrhoea              | 0: no\        |
|                             | 1: yes\       |
|                             | 98: not sure  |
+-----------------------------+---------------+
| RX_preconsult_antibiotics   |               |
+-----------------------------+---------------+
| RX_preconsult_antimalarials |               |
+-----------------------------+---------------+
| CONSULT_district            | Kaliua\       |
|                             | Sengerema\    |
|                             | Tanga         |
+-----------------------------+---------------+
| CONSULT_area                | urban\        |
|                             | rural         |
+-----------------------------+---------------+
| CONSULT_facility_type       | dispensary\   |
|                             | health centre |
+-----------------------------+---------------+

### Structure of the data

::: panel-tabset
#### :pencil2: Exercise 2

Examine the structure of the data, including variable names, labels.

::: callout-tip
-   Stata: use the [codebook](https://www.stata.com/manuals/dcodebook.pdf) command
-   R: use the [skim](https://docs.ropensci.org/skimr/reference/skim.html) function from the `skimr` package
:::

```{r}
#| echo: fenced
# Write your code here
```

#### Stata

```{r}
#| echo: fenced
RStata::stata("codebook SDC_age_in_month SDC_sex CLIN_fever CLIN_fever_onset CLIN_diarrhoea CLIN_cough RX_preconsult_antibiotics RX_preconsult_antimalarials CONSULT_district CONSULT_area CONSULT_facility_type",
              data.in = stata_df)
```

#### R

```{r}
#| echo: fenced
df %>%
  skim(SDC_age_in_month,
       SDC_sex,
       CLIN_fever,
       CLIN_fever_onset,
       CLIN_diarrhoea,
       CLIN_cough,
       RX_preconsult_antibiotics,
       RX_preconsult_antimalarials,
       CONSULT_district,
       CONSULT_area,
       CONSULT_facility_type)
```
:::

::: panel-tabset
#### :pencil2: Exercise 3

Add the following two new variables to data frame `df`

+---------------------------+---------------+
| Variable                  | Coding        |
+===========================+===============+
| SDC_age_category          | \<2 months\   |
|                           | 2-11 months\  |
|                           | 12-23 months\ |
|                           | 24-35 months\ |
|                           | 36-47 months\ |
|                           | 48-59 months  |
+---------------------------+---------------+
| CLIN_fever_onset_category | \<2 days\     |
|                           | 2-3 days\     |
|                           | 4-6 days\     |
|                           | â‰¥7 days       |
+---------------------------+---------------+

::: callout-tip
-   Stata: use the gen command
-   R: use the [mutate](https://dplyr.tidyverse.org/reference/mutate.html) and [case_when](https://dplyr.tidyverse.org/reference/case_when.html) functions from the `dplyr` package
:::

```{r}
#| echo: fenced
# Write your code here
```

#### Stata

#### R

```{r}
#| echo: fenced
df <- df %>%
  dplyr::mutate(
    SDC_age_category = dplyr::case_when(
      SDC_age_in_month < 2 ~ "<2 months",
      SDC_age_in_month >= 2 & SDC_age_in_month < 12 ~ "02-11 months",
      SDC_age_in_month >= 12 & SDC_age_in_month < 24 ~ "12-23 months",
      SDC_age_in_month >= 24 & SDC_age_in_month < 36 ~ "24-35 months",
      SDC_age_in_month >= 36 & SDC_age_in_month < 48 ~ "36-47 months",
      SDC_age_in_month >= 48 & SDC_age_in_month < 60 ~ "48-59 months",
      TRUE ~ ""
    )
  ) %>% 
  dplyr::mutate(
    CLIN_fever_onset_category = dplyr::case_when(
      CLIN_fever_onset < 2 ~ "<2 days",
      CLIN_fever_onset >= 2 & CLIN_fever_onset < 4 ~ "2-3 days",
      CLIN_fever_onset >= 4 & CLIN_fever_onset < 7 ~ "4-6 days",
      CLIN_fever_onset >= 7 ~ ">= 7 days",
      TRUE ~ ""
    )
  )
```

#### Python
:::

::: panel-tabset
#### :pencil2: Exercise 4

Display descriptive statistics for the following population characteristics:

::: callout-tip
-   Stata
-   R: use the [tbl_summary](https://www.danieldsjoberg.com/gtsummary/reference/tbl_summary.html) function from the `gtsummary` package
:::

```{r}
#| echo: fenced
# Write your code here
```

#### Stata

```{r}
#| echo: fenced
RStata::stata('tabulate SDC_age_category
              tabulate SDC_sex
              tabulate CLIN_fever
              tabulate CLIN_fever_onset_category
              tabulate CLIN_diarrhoea
              tabulate CLIN_cough
              tabulate RX_preconsult_antibiotics
              tabulate RX_preconsult_antimalarials
              tabulate CONSULT_district
              tabulate CONSULT_area
              tabulate CONSULT_facility_type',
              data.in = stata_df)
```

#### R

```{r}
#| echo: fenced
df %>%
  dplyr::select(SDC_age_category,
                SDC_sex,
                CLIN_fever,
                CLIN_fever_onset_category,
                CLIN_diarrhoea,
                CLIN_cough,
                RX_preconsult_antibiotics,
                RX_preconsult_antimalarials,
                CONSULT_district,
                CONSULT_area,
                CONSULT_facility_type) %>%
  gtsummary::tbl_summary(missing_text = "(Missing)")
```
:::

#### Identify missing values

Identify missing values in each variable: missing_plot

```{r}
explanatory = c("CONSULT_facility_ID", "CONSULT_district", "CLIN_fever")
dependent = "DX_malaria"

df %>% 
  finalfit::missing_pattern(dependent, explanatory)
```

## Healthcare provider actions

### Codebook

-   Temperature measured
    -   Fever measured
-   Fever (temp or history)
-   Malaria test
-   Any severe diagnosis
-   Malaria diagnosis
-   Malaria treatment
-   Referral

+-----------------------------+------------------------+
| Variable                    | Coding                 |
+=============================+========================+
| MEAS_temperature            |                        |
+-----------------------------+------------------------+
|                             |                        |
+-----------------------------+------------------------+
| TEST_malaria_result         | 0: negative\           |
|                             | 1: positive\           |
|                             | 2: indeterminate\      |
|                             | 95: unreadable result\ |
|                             | 98: not sure           |
+-----------------------------+------------------------+
| DX_malaria                  | 0: no\                 |
|                             | 1: yes                 |
+-----------------------------+------------------------+
| RX_antimalarials            | 0: no\                 |
|                             | 1: yes                 |
+-----------------------------+------------------------+
| MGMT_referral_src_caregiver |                        |
+-----------------------------+------------------------+
| MGMT_referral_src_registry  |                        |
+-----------------------------+------------------------+

### Structure of the data

::: panel-tabset
#### :pencil2: Exercise 5

Examine the structure of the data, including variable names, labels.

::: callout-tip
-   Stata: use the [codebook](https://www.stata.com/manuals/dcodebook.pdf) command
-   R: use the [skim](https://docs.ropensci.org/skimr/reference/skim.html) function from the `skimr` package
:::

```{r}
#| echo: fenced
# Write your code here
```

#### Stata

```{r}
RStata::stata("codebook MEAS_temperature TEST_malaria_result TEST_malaria_result DX_malaria RX_antimalarials MGMT_referral_src_caregiver MGMT_referral_src_registry",
              data.in = stata_df)
```

#### R

```{r}
df %>%
  skimr::skim(MEAS_temperature,
              TEST_malaria_result,
              TEST_malaria_result,
              DX_malaria,
              RX_antimalarials,
              MGMT_referral_src_caregiver,
              MGMT_referral_src_registry)
```
:::

::: panel-tabset
#### :pencil2: Exercise 3

Add the following two new variables to data frame `df`

-   MEAS_fever
-   Fever (temp or history)

::: callout-tip
-   Stata: use the gen command
-   R: use the mutate function from the `dplyr` package
:::

```{r}
#| echo: fenced
# Write your code here
```

#### Stata

#### R

```{r}
#| echo: fenced
df <- df %>%
  dplyr::mutate(CALC_temperature_measured = !is.na(MEAS_temperature)) %>%
  dplyr::mutate(CALC_fever = MEAS_temperature >= 37.5) %>%
  dplyr::mutate(CALC_fever_or_temp = (CLIN_fever == 1) | (CALC_fever == 1))
```

#### Python
:::

::: panel-tabset
#### :pencil2: Exercise 6

Display descriptive statistics for the following healthcare provider actions:

::: callout-tip
-   R: use the [tbl_summary](https://www.danieldsjoberg.com/gtsummary/reference/tbl_summary.html) function from the `gtsummary` package
:::

```{r}
#| echo: fenced
# Write your code here
```

#### Stata

#### R

```{r}
#| echo: fenced
df %>%
  dplyr::select(CALC_temperature_measured,
                CALC_fever,
                CALC_fever_or_temp,
                TEST_malaria_result,
                TEST_malaria_result,
                DX_malaria,
                RX_antimalarials,
                MGMT_referral_src_caregiver,
                MGMT_referral_src_registry) %>%
  gtsummary::tbl_summary(missing_text = "(Missing)")
```
:::

## Number of consultations by facility

::: panel-tabset
### :pencil2: Exercise 6

Plot the number of consultations by facility in bars, grouped by district.

::: callout-tip
-   Stata:
-   R:
:::

### Stata

```{r}
#| echo: fenced
stata_cmd <- '
graph bar (count) child_ID, over(CONSULT_facility_ID, axis(off)) over(CONSULT_district, relabel(1 "Kaliua" 2 "Sengerema" 3 "Tanga")) nofill ytitle(No. consultations) title(No. consultations by facility)
graph export ./images/day02_stata_plot.png, replace
'
RStata::stata(stata_cmd,
              data.in = stata_df)
```

![](images/day02_stata_plot.png)

### R

```{r}
#| echo: fenced
df %>%
  dplyr::group_by(CONSULT_district,
                  CONSULT_facility_ID) %>%
  count() %>% 
  ggplot2::ggplot(aes(x = haven::as_factor(CONSULT_district),
                      y = n)) + 
  ggplot2::geom_bar(position = position_dodge2(preserve = "single"),
                    stat="identity") +
  ggplot2::labs(x = "", y = "No. consultations") +
  ggthemes::theme_hc()
```
:::

## Fever assessment

-   temp measurement by reported fever; by facility

```{r}
#| echo: fenced
# Write here
```

```{r}
chisq.test(df$CLIN_fever, df$TEST_malaria_result)
```

```{r}
#| echo: fenced
df$CONSULT_facility_ID <- haven::as_factor(df$CONSULT_facility_ID) 
df %>%
  dplyr::filter(CLIN_fever == 1) %>%
  dplyr::select(MEAS_temperature,
                CONSULT_facility_ID) %>%
  gtsummary::tbl_summary(by = CONSULT_facility_ID) %>%
  add_p()
```

-   also showing 'prevalence' of fever when of whole clinic vs of those who measure to indicate bias

```{r}
#| echo: fenced
# Write here
```

## Malaria tests

-   malaria tests of those with history or measured fever

```{r}
#| echo: fenced
# Write here
```

```{r}
#| echo: fenced
table(df$CALC_fever_or_temp, df$TEST_malaria_result)
```

```{r}
chisq.test(df$CALC_fever_or_temp, df$TEST_malaria_result)
```

```{r}
#| echo: fenced
df$CONSULT_facility_ID <- haven::as_factor(df$CONSULT_facility_ID) 
df %>%
  dplyr::filter(CALC_fever_or_temp == 1) %>%
  dplyr::select(TEST_malaria_result,
                CONSULT_facility_ID) %>%
  gtsummary::tbl_summary(by = CONSULT_facility_ID)
```

## Malaria treatments

-   malaria diagnoses vs. positive tests vs. treatment.

```{r}
#| echo: fenced
# Write here
```

```{r}
#| echo: fenced
df <- df %>%
  dplyr::mutate(TEST_malaria_positive = 1* (TEST_malaria_result == 1))
table(df$TEST_malaria_result, df$DX_malaria, df$RX_antimalarials) %>% knitr::kable()
```

```{r}
chisq.test(df$TEST_malaria_result, df$DX_malaria)
```

```{r}
chisq.test(df$TEST_malaria_result, df$RX_antimalarials)
```

```{r}
#| echo: fenced
df$CONSULT_facility_ID <- haven::as_factor(df$CONSULT_facility_ID) 
df %>%
  dplyr::filter(TEST_malaria_positive == 1) %>%
  dplyr::select(DX_malaria,
                RX_antimalarials,
                CONSULT_facility_ID) %>%
  gtsummary::tbl_summary(by = CONSULT_facility_ID)
```
